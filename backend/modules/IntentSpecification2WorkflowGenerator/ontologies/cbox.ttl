@prefix cb: <https://extremexp.eu/ontology/cbox#> .
@prefix dmop: <http://www.e-lico.eu/ontologies/dmo/DMOP/DMOP.owl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix tb: <https://extremexp.eu/ontology/tbox#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dmop:delimiter rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:doubleQuote rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:encoding rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:fileFormat rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:hasColumnName rdfs:subPropertyOf dmop:ColumnInfoProperty .

dmop:hasHeader rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:hasMaxValue rdfs:subPropertyOf dmop:ColumnValueInfoProperty .

dmop:hasMeanValue rdfs:subPropertyOf dmop:ColumnValueInfoProperty .

dmop:hasMinValue rdfs:subPropertyOf dmop:ColumnValueInfoProperty .

dmop:hasPosition rdfs:subPropertyOf dmop:ColumnInfoProperty .

dmop:hasStandardDeviation rdfs:subPropertyOf dmop:ColumnValueInfoProperty .

dmop:isUnique rdfs:subPropertyOf dmop:ColumnInfoProperty .

dmop:lineDelimiter rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:numberOfColumns rdfs:subPropertyOf dmop:DatasetInfoProperty .

dmop:numberOfRows rdfs:subPropertyOf dmop:DatasetInfoProperty .

dmop:path rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:quoteChar rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

dmop:skipInitialSpace rdfs:subPropertyOf dmop:DatasetPhysicalProperty .

cb: a owl:Ontology ;
    rdfs:label "ExtremeXP Ontology CBox" .

cb:BarChart a tb:Algorithm ;
    rdfs:label "BarChart" ;
    tb:solves cb:DataVisualization .

cb:BarChartVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:BarChartVisualization .

cb:COPY a tb:Operation .

cb:DBSCAN a tb:Algorithm ;
    rdfs:label "DBSCAN" ;
    tb:solves cb:Clustering .

cb:DIV a tb:Operation .

cb:DecisionTree a tb:Algorithm ;
    rdfs:label "DecisionTree" ;
    tb:solves cb:Classification .

cb:DecisionTreeModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:DecisionTreeModel .

cb:DuplicateRemoval a tb:Algorithm ;
    rdfs:label "DuplicateRemoval" ;
    tb:solves cb:DuplicationRemoval .

cb:EQ a tb:Operation .

cb:Explanation a tb:Task .

cb:FloatTabularDatasetShape a sh:NodeShape ;
    sh:property cb:hasFloatColumn,
        cb:hasIntegerColumn ;
    sh:targetClass dmop:TabularDataset .

cb:HeatMap a tb:Algorithm ;
    rdfs:label "HeatMap" ;
    tb:solves cb:DataVisualization .

cb:HeatMapVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:HeatMapVisualization .

cb:HierarchicalClustering a tb:Algorithm ;
    rdfs:label "HierarchicalClustering" ;
    tb:solves cb:Clustering .

cb:Histogram a tb:Algorithm ;
    rdfs:label "Histogram" ;
    tb:solves cb:DataVisualization .

cb:HistogramVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:HistogramVisualization .

cb:IntegerTabularDatasetShape a sh:NodeShape ;
    sh:property cb:hasFloatColumn,
        cb:hasIntegerColumn ;
    sh:targetClass dmop:TabularDataset .

cb:IsolationForest a tb:Algorithm ;
    rdfs:label "IsolationForest" ;
    tb:solves cb:AnomalyDetection .

cb:KMeans a tb:Algorithm ;
    rdfs:label "KMeans" ;
    tb:solves cb:Clustering .

cb:KNIME-implementation-knime_csv_reader a tb:EngineImplementation ;
    tb:engine "KNIME" ;
    tb:hasBaseImplementation cb:implementation-data_reader ;
    tb:hasParameter cb:KNIME-implementation-knime_csv_reader-append_path_column_internals,
        cb:KNIME-implementation-knime_csv_reader-autodetect_buffer_size,
        cb:KNIME-implementation-knime_csv_reader-charset,
        cb:KNIME-implementation-knime_csv_reader-column_delimiter,
        cb:KNIME-implementation-knime_csv_reader-comment_char,
        cb:KNIME-implementation-knime_csv_reader-connected_fs,
        cb:KNIME-implementation-knime_csv_reader-convenience_fs_category,
        cb:KNIME-implementation-knime_csv_reader-custom_url_timeout,
        cb:KNIME-implementation-knime_csv_reader-decimal_separator,
        cb:KNIME-implementation-knime_csv_reader-enabledstatus,
        cb:KNIME-implementation-knime_csv_reader-fail_on_differing_specs,
        cb:KNIME-implementation-knime_csv_reader-file_system_type,
        cb:KNIME-implementation-knime_csv_reader-files_extension_case_sensitive,
        cb:KNIME-implementation-knime_csv_reader-files_extension_expression,
        cb:KNIME-implementation-knime_csv_reader-files_name_case_sensitive,
        cb:KNIME-implementation-knime_csv_reader-files_name_expression,
        cb:KNIME-implementation-knime_csv_reader-files_name_filter_type,
        cb:KNIME-implementation-knime_csv_reader-filter_files_extension,
        cb:KNIME-implementation-knime_csv_reader-filter_files_name,
        cb:KNIME-implementation-knime_csv_reader-filter_folders_name,
        cb:KNIME-implementation-knime_csv_reader-filter_mode,
        cb:KNIME-implementation-knime_csv_reader-folders_name_case_sensitive,
        cb:KNIME-implementation-knime_csv_reader-folders_name_expression,
        cb:KNIME-implementation-knime_csv_reader-folders_name_filter_type,
        cb:KNIME-implementation-knime_csv_reader-follow_links,
        cb:KNIME-implementation-knime_csv_reader-format,
        cb:KNIME-implementation-knime_csv_reader-has_column_header,
        cb:KNIME-implementation-knime_csv_reader-has_fs_port,
        cb:KNIME-implementation-knime_csv_reader-has_row_id,
        cb:KNIME-implementation-knime_csv_reader-include_hidden_files,
        cb:KNIME-implementation-knime_csv_reader-include_hidden_folders,
        cb:KNIME-implementation-knime_csv_reader-include_special_files,
        cb:KNIME-implementation-knime_csv_reader-include_subfolders,
        cb:KNIME-implementation-knime_csv_reader-limit_data_rows,
        cb:KNIME-implementation-knime_csv_reader-limit_data_rows_scanned,
        cb:KNIME-implementation-knime_csv_reader-limit_memory_per_column,
        cb:KNIME-implementation-knime_csv_reader-location_present,
        cb:KNIME-implementation-knime_csv_reader-max_data_rows_scanned,
        cb:KNIME-implementation-knime_csv_reader-max_rows,
        cb:KNIME-implementation-knime_csv_reader-maximum_number_of_columns,
        cb:KNIME-implementation-knime_csv_reader-mountpoint,
        cb:KNIME-implementation-knime_csv_reader-number_of_lines_to_skip,
        cb:KNIME-implementation-knime_csv_reader-number_of_rows_to_skip,
        cb:KNIME-implementation-knime_csv_reader-overwritten_by_variable,
        cb:KNIME-implementation-knime_csv_reader-path,
        cb:KNIME-implementation-knime_csv_reader-path_column_name_internals,
        cb:KNIME-implementation-knime_csv_reader-prepend_file_idx_to_row_id,
        cb:KNIME-implementation-knime_csv_reader-quote_char,
        cb:KNIME-implementation-knime_csv_reader-quote_escape_char,
        cb:KNIME-implementation-knime_csv_reader-quote_option,
        cb:KNIME-implementation-knime_csv_reader-relative_to,
        cb:KNIME-implementation-knime_csv_reader-replace_empty_quotes_with_missing,
        cb:KNIME-implementation-knime_csv_reader-row_delimiter,
        cb:KNIME-implementation-knime_csv_reader-save_table_spec_config_internals,
        cb:KNIME-implementation-knime_csv_reader-settingsmodelid,
        cb:KNIME-implementation-knime_csv_reader-skip_data_rows,
        cb:KNIME-implementation-knime_csv_reader-skip_empty_data_rows,
        cb:KNIME-implementation-knime_csv_reader-skip_lines,
        cb:KNIME-implementation-knime_csv_reader-smid_filtermode,
        cb:KNIME-implementation-knime_csv_reader-spaceid,
        cb:KNIME-implementation-knime_csv_reader-spacename,
        cb:KNIME-implementation-knime_csv_reader-spec_merge_mode_internals,
        cb:KNIME-implementation-knime_csv_reader-support_short_data_rows,
        cb:KNIME-implementation-knime_csv_reader-thousands_separator,
        cb:KNIME-implementation-knime_csv_reader-use_line_break_row_delimiter ;
    tb:knime-factory "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory" ;
    tb:knime-node-bundle-name "KNIME Base Nodes" ;
    tb:knime-node-bundle-symbolic-name "org.knime.base" ;
    tb:knime-node-bundle-vendor "KNIME AG, Zurich, Switzerland" ;
    tb:knime-node-bundle-version "4.7.0.v202301251625" ;
    tb:knime-node-feature-name "" ;
    tb:knime-node-feature-symbolic-name "" ;
    tb:knime-node-feature-vendor "" ;
    tb:knime-node-feature-version "0.0.0" ;
    tb:knime-node-name "KNime CSV Reader" ;
    tb:name "KNime CSV Reader" .

cb:KNIME-implementation-knime_csv_writer a tb:EngineImplementation ;
    tb:engine "KNIME" ;
    tb:hasBaseImplementation cb:implementation-data_writer ;
    tb:hasParameter cb:KNIME-implementation-knime_csv_writer-add_custom_text_to_comment,
        cb:KNIME-implementation-knime_csv_writer-add_table_name_to_comment,
        cb:KNIME-implementation-knime_csv_writer-add_time_to_comment,
        cb:KNIME-implementation-knime_csv_writer-add_user_to_comment,
        cb:KNIME-implementation-knime_csv_writer-character_set,
        cb:KNIME-implementation-knime_csv_writer-column_delimiter,
        cb:KNIME-implementation-knime_csv_writer-comment_indentation,
        cb:KNIME-implementation-knime_csv_writer-comment_line_marker,
        cb:KNIME-implementation-knime_csv_writer-compress_with_gzip,
        cb:KNIME-implementation-knime_csv_writer-connected_fs,
        cb:KNIME-implementation-knime_csv_writer-convenience_fs_category,
        cb:KNIME-implementation-knime_csv_writer-create_missing_folders,
        cb:KNIME-implementation-knime_csv_writer-custom_comment_text,
        cb:KNIME-implementation-knime_csv_writer-custom_url_timeout,
        cb:KNIME-implementation-knime_csv_writer-decimal_separator,
        cb:KNIME-implementation-knime_csv_writer-enabledstatus,
        cb:KNIME-implementation-knime_csv_writer-file_system_type,
        cb:KNIME-implementation-knime_csv_writer-has_fs_port,
        cb:KNIME-implementation-knime_csv_writer-if_path_exists,
        cb:KNIME-implementation-knime_csv_writer-keep_trailing_zero_in_decimals,
        cb:KNIME-implementation-knime_csv_writer-location_present,
        cb:KNIME-implementation-knime_csv_writer-missing_value_pattern,
        cb:KNIME-implementation-knime_csv_writer-mountpoint,
        cb:KNIME-implementation-knime_csv_writer-overwritten_by_variable,
        cb:KNIME-implementation-knime_csv_writer-path,
        cb:KNIME-implementation-knime_csv_writer-quote_char,
        cb:KNIME-implementation-knime_csv_writer-quote_escape_char,
        cb:KNIME-implementation-knime_csv_writer-quote_mode,
        cb:KNIME-implementation-knime_csv_writer-relative_to,
        cb:KNIME-implementation-knime_csv_writer-row_delimeter,
        cb:KNIME-implementation-knime_csv_writer-separator_replacement,
        cb:KNIME-implementation-knime_csv_writer-settingsmodelid,
        cb:KNIME-implementation-knime_csv_writer-skip_column_header_on_append,
        cb:KNIME-implementation-knime_csv_writer-spaceid,
        cb:KNIME-implementation-knime_csv_writer-spacename,
        cb:KNIME-implementation-knime_csv_writer-use_scientific_format,
        cb:KNIME-implementation-knime_csv_writer-write_column_header,
        cb:KNIME-implementation-knime_csv_writer-write_row_header ;
    tb:knime-factory "org.knime.base.node.io.filehandling.csv.writer.CSVWriter2NodeFactory" ;
    tb:knime-node-bundle-name "KNIME Base Nodes" ;
    tb:knime-node-bundle-symbolic-name "org.knime.base" ;
    tb:knime-node-bundle-vendor "KNIME AG, Zurich, Switzerland" ;
    tb:knime-node-bundle-version "4.7.0.v202301251625" ;
    tb:knime-node-feature-name "" ;
    tb:knime-node-feature-symbolic-name "" ;
    tb:knime-node-feature-vendor "" ;
    tb:knime-node-feature-version "0.0.0" ;
    tb:knime-node-name "KNIME CSV Writer" ;
    tb:name "KNIME CSV Writer" .

cb:KNIME-implementation-knime_data_partitioning a tb:EngineImplementation ;
    tb:engine "KNIME" ;
    tb:hasBaseImplementation cb:implementation-data_partitioning ;
    tb:hasParameter cb:KNIME-implementation-knime_data_partitioning-class_column,
        cb:KNIME-implementation-knime_data_partitioning-count,
        cb:KNIME-implementation-knime_data_partitioning-fraction,
        cb:KNIME-implementation-knime_data_partitioning-method,
        cb:KNIME-implementation-knime_data_partitioning-random_seed,
        cb:KNIME-implementation-knime_data_partitioning-samplingmethod ;
    tb:knime-factory "org.knime.base.node.preproc.partition.PartitionNodeFactory" ;
    tb:knime-node-bundle-name "KNIME Base Nodes" ;
    tb:knime-node-bundle-symbolic-name "org.knime.base" ;
    tb:knime-node-bundle-vendor "KNIME AG, Zurich, Switzerland" ;
    tb:knime-node-bundle-version "4.7.0.v202301251625" ;
    tb:knime-node-feature-name "" ;
    tb:knime-node-feature-symbolic-name "" ;
    tb:knime-node-feature-vendor "" ;
    tb:knime-node-feature-version "0.0.0" ;
    tb:knime-node-name "Knime Data Partitioning" ;
    tb:name "Knime Data Partitioning" .

cb:KNN a tb:Algorithm ;
    rdfs:label "KNN" ;
    tb:solves cb:Classification .

cb:KNNImputation a tb:Algorithm ;
    rdfs:label "KNNImputation" ;
    tb:solves cb:MissingValueManagement .

cb:LabelColumnShape a sh:NodeShape ;
    sh:property cb:LabelColumnProperty ;
    sh:targetClass dmop:Column .

cb:LabelExtraction a tb:Algorithm ;
    rdfs:label "LabelExtraction" ;
    tb:solves cb:DataManagement .

cb:LinePlot a tb:Algorithm ;
    rdfs:label "LinePlot" ;
    tb:solves cb:DataVisualization .

cb:LinePlotVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:LinePlotVisualization .

cb:LocalOutlierFactor a tb:Algorithm ;
    rdfs:label "LocalOutlierFactor" ;
    tb:solves cb:AnomalyDetection .

cb:MUL a tb:Operation .

cb:MeanImputation a tb:Algorithm ;
    rdfs:label "MeanImputation" ;
    tb:solves cb:MissingValueManagement .

cb:MedianImputation a tb:Algorithm ;
    rdfs:label "MedianImputation" ;
    tb:solves cb:MissingValueManagement .

cb:MinMaxScaling a tb:Algorithm ;
    rdfs:label "MinMaxScaling" ;
    tb:solves cb:Normalization .

cb:MissingValueModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:MissingValueModel .

cb:ModeImputation a tb:Algorithm ;
    rdfs:label "ModeImputation" ;
    tb:solves cb:MissingValueManagement .

cb:NNModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:NNModel .

cb:NaiveBayes a tb:Algorithm ;
    rdfs:label "NaiveBayes" ;
    tb:solves cb:Classification .

cb:NonNullNumericFeatureTabularDatasetShape a sh:NodeShape ;
    sh:property [ sh:node cb:NonNullNumericFeatureColumnShape ;
            sh:path dmop:hasColumn ] ;
    sh:targetClass dmop:TabularDataset .

cb:NormalDistributionDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isNormalDistributionConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:NormalizerModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:NormalizerModel .

cb:NotNormalDistributionDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isNotNormalDistributionConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:NotOutlieredDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:hasNoOutliersConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:NumericCategoricalModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:NumericCategoricalModel .

cb:NumericTabularDatasetShape a sh:NodeShape ;
    sh:property [ sh:node cb:NumericColumnShape ;
            sh:path dmop:hasColumn ] ;
    sh:targetClass dmop:TabularDataset .

cb:OneClassSVM a tb:Algorithm ;
    rdfs:label "OneClassSVM" ;
    tb:solves cb:AnomalyDetection .

cb:OutlieredDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:hasOutliersConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:POW a tb:Operation .

cb:PieChart a tb:Algorithm ;
    rdfs:label "PieChart" ;
    tb:solves cb:DataVisualization .

cb:PieChartVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:PieChartVisualization .

cb:Prediction a tb:Task .

cb:ProjectionModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:ProjectionModel .

cb:Python-implementation-python_data_partitioning a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-data_partitioning ;
    tb:hasParameter cb:Python-implementation-python_data_partitioning-random_state,
        cb:Python-implementation-python_data_partitioning-shuffle,
        cb:Python-implementation-python_data_partitioning-test_size,
        cb:Python-implementation-python_data_partitioning-train_size ;
    tb:name "Python Data Partitioning" ;
    tb:python_function "train_test_split" ;
    tb:python_module "sklearn.model_selection" ;
    tb:python_version "1.7.2" ;
    tb:template "basic_function" .

cb:Python-implementation-python_data_reader a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-data_reader ;
    tb:hasParameter cb:Python-implementation-python_data_reader-format,
        cb:Python-implementation-python_data_reader-path ;
    tb:name "Python Data Reader" ;
    tb:python_function "Custom" ;
    tb:python_module "Custom" ;
    tb:python_version "1.0.0" ;
    tb:template "reader" .

cb:Python-implementation-python_data_writer a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-data_writer ;
    tb:hasParameter cb:Python-implementation-python_data_writer-path_or_buf ;
    tb:name "Python Data writer" ;
    tb:python_function "DataFrame" ;
    tb:python_module "pandas" ;
    tb:python_version "2.2.3" ;
    tb:template "writer" .

cb:Python-implementation-python_missing_value a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-missing_value ;
    tb:hasParameter cb:Python-implementation-python_missing_value-categorical_columns,
        cb:Python-implementation-python_missing_value-factor_strategy,
        cb:Python-implementation-python_missing_value-numeric_columns,
        cb:Python-implementation-python_missing_value-numeric_strategy ;
    tb:name "Python Missing Value" ;
    tb:python_function "Custom" ;
    tb:python_module "sklearn" ;
    tb:python_version "1.7.2" ;
    tb:template "sklearn_imputation" .

cb:Python-implementation-python_missing_value_\(applier\) a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-missing_value_\(applier\) ;
    tb:name "Python Missing Value (Applier)" ;
    tb:python_function "Custom" ;
    tb:python_module "sklearn" ;
    tb:python_version "1.7.2" ;
    tb:template "sklearn_imputation_applier" .

cb:Python-implementation-python_numeric_projection_predictor a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-numeric_projection_predictor ;
    tb:name "Python Numeric projection Predictor" ;
    tb:python_function "custom" ;
    tb:python_module "pandas" ;
    tb:python_version "2.2.3" ;
    tb:template "projection_predict" .

cb:Python-implementation-python_numerical_projection a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-numerical_projection ;
    tb:hasParameter cb:Python-implementation-python_numerical_projection-columns,
        cb:Python-implementation-python_numerical_projection-target ;
    tb:name "Python Numerical Projection" ;
    tb:python_function "custom" ;
    tb:python_module "pandas" ;
    tb:python_version "2.2.3" ;
    tb:template "projection_train" .

cb:Python-implementation-python_svm_learner a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-svm_learner ;
    tb:hasParameter cb:Python-implementation-python_svm_learner-c,
        cb:Python-implementation-python_svm_learner-coef0,
        cb:Python-implementation-python_svm_learner-degree,
        cb:Python-implementation-python_svm_learner-gamma,
        cb:Python-implementation-python_svm_learner-kernel,
        cb:Python-implementation-python_svm_learner-target ;
    tb:name "Python SVM Learner" ;
    tb:python_function "SVC" ;
    tb:python_module "sklearn.svm" ;
    tb:python_version "1.7.2" ;
    tb:template "sklearn_train" .

cb:Python-implementation-python_svm_predictor a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-svm_predictor ;
    tb:name "Python SVM Predictor" ;
    tb:python_function "SVC" ;
    tb:python_module "sklearn.svm" ;
    tb:python_version "1.7.2" ;
    tb:template "sklearn_predict" .

cb:Python-implementation-python_xgboost_learner a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-xgboost_learner ;
    tb:hasParameter cb:Python-implementation-python_xgboost_learner-base_score,
        cb:Python-implementation-python_xgboost_learner-booster,
        cb:Python-implementation-python_xgboost_learner-colsample_bylevel,
        cb:Python-implementation-python_xgboost_learner-colsample_bynode,
        cb:Python-implementation-python_xgboost_learner-colsample_bytree,
        cb:Python-implementation-python_xgboost_learner-feature_selector,
        cb:Python-implementation-python_xgboost_learner-gamma,
        cb:Python-implementation-python_xgboost_learner-grow_policy,
        cb:Python-implementation-python_xgboost_learner-learning_rate,
        cb:Python-implementation-python_xgboost_learner-max_bin,
        cb:Python-implementation-python_xgboost_learner-max_delta_step,
        cb:Python-implementation-python_xgboost_learner-max_depth,
        cb:Python-implementation-python_xgboost_learner-max_leaves,
        cb:Python-implementation-python_xgboost_learner-min_child_weight,
        cb:Python-implementation-python_xgboost_learner-n_estimators,
        cb:Python-implementation-python_xgboost_learner-n_jobs,
        cb:Python-implementation-python_xgboost_learner-normalize_type,
        cb:Python-implementation-python_xgboost_learner-objective,
        cb:Python-implementation-python_xgboost_learner-one_drop,
        cb:Python-implementation-python_xgboost_learner-random_state,
        cb:Python-implementation-python_xgboost_learner-rate_drop,
        cb:Python-implementation-python_xgboost_learner-reg_alpha,
        cb:Python-implementation-python_xgboost_learner-reg_lambda,
        cb:Python-implementation-python_xgboost_learner-sample_type,
        cb:Python-implementation-python_xgboost_learner-sample_weight,
        cb:Python-implementation-python_xgboost_learner-scale_pos_weight,
        cb:Python-implementation-python_xgboost_learner-sketch_eps,
        cb:Python-implementation-python_xgboost_learner-skip_drop,
        cb:Python-implementation-python_xgboost_learner-subsample,
        cb:Python-implementation-python_xgboost_learner-target,
        cb:Python-implementation-python_xgboost_learner-top_k,
        cb:Python-implementation-python_xgboost_learner-tree_method ;
    tb:name "Python XGBoost Learner" ;
    tb:python_function "XGBClassifier" ;
    tb:python_module "xgboost" ;
    tb:python_version "3.0.5" ;
    tb:template "sklearn_train" .

cb:Python-implementation-python_xgboost_predictor a tb:EngineImplementation ;
    tb:engine "Python" ;
    tb:hasBaseImplementation cb:implementation-xgboost_predictor ;
    tb:name "Python XGBoost Predictor" ;
    tb:python_function "XGBClassifier" ;
    tb:python_module "xgboost" ;
    tb:python_version "3.0.5" ;
    tb:template "sklearn_predict" .

cb:RandomForest a tb:Algorithm ;
    rdfs:label "RandomForest" ;
    tb:solves cb:Classification .

cb:RobustNormalization a tb:Algorithm ;
    rdfs:label "RobustNormalization" ;
    tb:solves cb:Normalization .

cb:SQRT a tb:Operation .

cb:SUB a tb:Operation .

cb:SUM a tb:Operation .

cb:SVMModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:SVMModel .

cb:ScatterPlot a tb:Algorithm ;
    rdfs:label "ScatterPlot" ;
    tb:solves cb:DataVisualization .

cb:ScatterPlotVisualizationShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:ScatterPlotVisualization .

cb:XGBoostModelShape a sh:NodeShape,
        tb:DataSpec ;
    sh:targetClass cb:XGBoostModel .

cb:ZScoreScaling a tb:Algorithm ;
    rdfs:label "ZScoreScaling" ;
    tb:solves cb:Normalization .

cb:component-csv_reader_component a tb:Component ;
    rdfs:label "CSV Reader component" ;
    tb:exposesParameter cb:implementation-data_reader-reader_file ;
    tb:hasImplementation cb:implementation-data_reader ;
    tb:hasTransformation ( [ a tb:LoaderTransformation ;
                tb:transformation_language "LOADER" ;
                tb:transformation_query "Set dataset AS output " ] ) ;
    tb:overridesParameter cb:component-csv_reader_component-format_csv_specification .

cb:component-data_writer_component a tb:Component ;
    rdfs:label "Data Writer component" ;
    tb:hasImplementation cb:implementation-data_writer ;
    tb:hasTransformation [ rdf:rest () ] .

cb:component-folder_reader_component a tb:Component ;
    rdfs:label "Folder Reader component" ;
    tb:exposesParameter cb:implementation-data_reader-reader_file ;
    tb:hasImplementation cb:implementation-data_reader ;
    tb:hasTransformation ( [ a tb:LoaderTransformation ;
                tb:transformation_language "LOADER" ;
                tb:transformation_query "Set dataset AS output " ] ) ;
    tb:overridesParameter cb:component-folder_reader_component-format_folder_specification .

cb:component-numpyzip_reader_component a tb:Component ;
    rdfs:label "NumpyZip Reader component" ;
    tb:exposesParameter cb:implementation-data_reader-reader_file ;
    tb:hasImplementation cb:implementation-data_reader ;
    tb:hasTransformation ( [ a tb:LoaderTransformation ;
                tb:transformation_language "LOADER" ;
                tb:transformation_query "Set dataset AS output " ] ) ;
    tb:overridesParameter cb:component-numpyzip_reader_component-format_numpyzip_specification .

cb:component-parquet_reader_component a tb:Component ;
    rdfs:label "Parquet Reader component" ;
    tb:exposesParameter cb:implementation-data_reader-reader_file ;
    tb:hasImplementation cb:implementation-data_reader ;
    tb:hasTransformation ( [ a tb:LoaderTransformation ;
                tb:transformation_language "LOADER" ;
                tb:transformation_query "Set dataset AS output " ] ) ;
    tb:overridesParameter cb:component-parquet_reader_component-format_parquet_specification .

cb:component-random_absolute_train_test_split a tb:Component ;
    rdfs:label "Random Absolute Train-Test Split" ;
    tb:exposesParameter cb:implementation-data_partitioning-count_\(absolute_size\),
        cb:implementation-data_partitioning-random_seed ;
    tb:hasImplementation cb:implementation-data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output1 dmop:numberOfRows ?rows1.
    $output2 dmop:numberOfRows ?rows1.
}
INSERT {
    $output1 dmop:numberOfRows ?newRows1 .
    $output1 dmop:isTrainDataset True .
    $output2 dmop:numberOfRows ?newRows2 .
    $output2 dmop:isTestDataset True .
}
WHERE {
    $output1 dmop:numberOfRows ?rows1.
    BIND(IF( ?rows1 - $parameter4>0, ?rows1 - $parameter4, 0 ) AS ?newRows2)
    BIND(?rows1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-random_absolute_train_test_split-sampling_method_random_specification,
        cb:component-random_absolute_train_test_split-size_type_absolute_specification .

cb:component-random_absolute_train_test_split_\(tensor\) a tb:Component ;
    rdfs:label "Random Absolute Train-Test Split (Tensor)" ;
    tb:exposesParameter cb:implementation-tensor_data_partitioning-count_\(absolute_size\),
        cb:implementation-tensor_data_partitioning-random_seed ;
    tb:hasImplementation cb:implementation-tensor_data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TensorDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?dim1 dmop:dimensionSize ?size1 .
    ?dim2 dmop:dimensionSize ?size1 .
}
INSERT {
    $output1 dmop:isTrainDataset True .
    $output2 dmop:isTestDataset True .

    ?dim1 dmop:dimensionSize ?newRows1 .
    ?dim2 dmop:dimensionSize ?newRows2 .
}
WHERE {

    $output1 dmop:hasArray ?array1 .
    ?array1 dmop:hasFeatureDimension ?dim1 .
    ?dim1 dmop:isHorizontalPartitionDimension true .
    ?dim1 dmop:dimensionSize ?size1 .

    $output2 dmop:hasArray ?array2 .
    ?array2 dmop:hasFeatureDimension ?dim2 .
    ?dim2 dmop:isHorizontalPartitionDimension true .
    ?dim2 dmop:dimensionSize ?size1 .

    BIND(IF( ?size1 - $parameter4>0, ?size1 - $parameter4, 0 ) AS ?newRows2)
    BIND(?size1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-random_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification,
        cb:component-random_absolute_train_test_split_\(tensor\)-sampling_method_random_specification .

cb:component-random_relative_train_test_split a tb:Component ;
    rdfs:label "Random Relative Train-Test Split" ;
    tb:exposesParameter cb:implementation-data_partitioning-fraction_\(relative_size\),
        cb:implementation-data_partitioning-random_seed ;
    tb:hasImplementation cb:implementation-data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output1 dmop:numberOfRows ?rows1.
    $output2 dmop:numberOfRows ?rows1.
}
INSERT {
    $output1 dmop:numberOfRows ?newRows1 .
    $output1 dmop:isTrainDataset True .
    $output2 dmop:numberOfRows ?newRows2 .
    $output2 dmop:isTestDataset True .
}
WHERE {
    $output1 dmop:numberOfRows ?rows1.
    BIND(xsd:integer(ROUND(?rows1 * (1 - $parameter3))) AS ?newRows2)
    BIND(?rows1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-random_relative_train_test_split-sampling_method_random_specification,
        cb:component-random_relative_train_test_split-size_type_relative_specification .

cb:component-random_relative_train_test_split_\(tensor\) a tb:Component ;
    rdfs:label "Random Relative Train-Test Split (Tensor)" ;
    tb:exposesParameter cb:implementation-tensor_data_partitioning-fraction_\(relative_size\),
        cb:implementation-tensor_data_partitioning-random_seed ;
    tb:hasImplementation cb:implementation-tensor_data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TensorDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?dim1 dmop:dimensionSize ?size1 .
    ?dim2 dmop:dimensionSize ?size1 .
}
INSERT {
    $output1 dmop:isTrainDataset True .
    $output2 dmop:isTestDataset True .

    ?dim1 dmop:dimensionSize ?newRows1 .
    ?dim2 dmop:dimensionSize ?newRows2 .
}
WHERE {

    $output1 dmop:hasArray ?array1 .
    ?array1 dmop:hasFeatureDimension ?dim1 .
    ?dim1 dmop:isHorizontalPartitionDimension true .
    ?dim1 dmop:dimensionSize ?size1 .

    $output2 dmop:hasArray ?array2 .
    ?array2 dmop:hasFeatureDimension ?dim2 .
    ?dim2 dmop:isHorizontalPartitionDimension true .
    ?dim2 dmop:dimensionSize ?size1 .

    BIND(xsd:integer(ROUND(?size1 * (1 - $parameter3))) AS ?newRows2)
    BIND(?size1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-random_relative_train_test_split_\(tensor\)-partition_method_relative_specification,
        cb:component-random_relative_train_test_split_\(tensor\)-sampling_method_random_specification .

cb:component-top_k_absolute_train_test_split a tb:Component ;
    rdfs:label "Top K Absolute Train-Test Split" ;
    tb:exposesParameter cb:implementation-data_partitioning-count_\(absolute_size\) ;
    tb:hasImplementation cb:implementation-data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output1 dmop:numberOfRows ?rows1.
    $output2 dmop:numberOfRows ?rows1.
}
INSERT {
    $output1 dmop:numberOfRows ?newRows1 .
    $output1 dmop:isTrainDataset True .
    $output2 dmop:numberOfRows ?newRows2 .
    $output2 dmop:isTestDataset True .
}
WHERE {
    $output1 dmop:numberOfRows ?rows1.
    BIND(IF( ?rows1 - $parameter4>0, ?rows1 - $parameter4, 0 ) AS ?newRows2)
    BIND(?rows1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-top_k_absolute_train_test_split-sampling_method_first_specification,
        cb:component-top_k_absolute_train_test_split-size_type_absolute_specification .

cb:component-top_k_absolute_train_test_split_\(tensor\) a tb:Component ;
    rdfs:label "Top K Absolute Train-Test Split (Tensor)" ;
    tb:exposesParameter cb:implementation-tensor_data_partitioning-count_\(absolute_size\) ;
    tb:hasImplementation cb:implementation-tensor_data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TensorDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?dim1 dmop:dimensionSize ?size1 .
    ?dim2 dmop:dimensionSize ?size1 .
}
INSERT {
    $output1 dmop:isTrainDataset True .
    $output2 dmop:isTestDataset True .

    ?dim1 dmop:dimensionSize ?newRows1 .
    ?dim2 dmop:dimensionSize ?newRows2 .
}
WHERE {

    $output1 dmop:hasArray ?array1 .
    ?array1 dmop:hasFeatureDimension ?dim1 .
    ?dim1 dmop:isHorizontalPartitionDimension true .
    ?dim1 dmop:dimensionSize ?size1 .

    $output2 dmop:hasArray ?array2 .
    ?array2 dmop:hasFeatureDimension ?dim2 .
    ?dim2 dmop:isHorizontalPartitionDimension true .
    ?dim2 dmop:dimensionSize ?size1 .


    BIND(IF( ?size1 - $parameter4>0, ?size1 - $parameter4, 0 ) AS ?newRows2)
    BIND(?size1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-top_k_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification,
        cb:component-top_k_absolute_train_test_split_\(tensor\)-sampling_method_first_specification .

cb:component-top_k_relative_train_test_split a tb:Component ;
    rdfs:label "Top K Relative Train-Test Split" ;
    tb:exposesParameter cb:implementation-data_partitioning-fraction_\(relative_size\) ;
    tb:hasImplementation cb:implementation-data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output1 dmop:numberOfRows ?rows1.
    $output2 dmop:numberOfRows ?rows1.
}
INSERT {
    $output1 dmop:numberOfRows ?newRows1 .
    $output1 dmop:isTrainDataset True .
    $output2 dmop:numberOfRows ?newRows2 .
    $output2 dmop:isTestDataset True .
}
WHERE {
    $output1 dmop:numberOfRows ?rows1.
    BIND(xsd:integer(ROUND(?rows1 * (1 - $parameter3))) AS ?newRows2)
    BIND(?rows1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-top_k_relative_train_test_split-sampling_method_first_specification,
        cb:component-top_k_relative_train_test_split-size_type_relative_specification .

cb:component-top_k_relative_train_test_split_\(tensor\) a tb:Component ;
    rdfs:label "Top K Relative Train-Test Split (Tensor)" ;
    tb:exposesParameter cb:implementation-tensor_data_partitioning-fraction_\(relative_size\) ;
    tb:hasImplementation cb:implementation-tensor_data_partitioning ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TensorDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 2 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 2" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?dim1 dmop:dimensionSize ?size1 .
    ?dim2 dmop:dimensionSize ?size1 .
}
INSERT {
    $output1 dmop:isTrainDataset True .
    $output2 dmop:isTestDataset True .

    ?dim1 dmop:dimensionSize ?newRows1 .
    ?dim2 dmop:dimensionSize ?newRows2 .
}
WHERE {

    $output1 dmop:hasArray ?array1 .
    ?array1 dmop:hasFeatureDimension ?dim1 .
    ?dim1 dmop:isHorizontalPartitionDimension true .
    ?dim1 dmop:dimensionSize ?size1 .

    $output2 dmop:hasArray ?array2 .
    ?array2 dmop:hasFeatureDimension ?dim2 .
    ?dim2 dmop:isHorizontalPartitionDimension true .
    ?dim2 dmop:dimensionSize ?size1 .

    BIND(xsd:integer(ROUND(?size1 * (1 - $parameter3))) AS ?newRows2)
    BIND(?size1 - ?newRows2 AS ?newRows1)
}
""" ] ) ;
    tb:overridesParameter cb:component-top_k_relative_train_test_split_\(tensor\)-partition_method_relative_specification,
        cb:component-top_k_relative_train_test_split_\(tensor\)-sampling_method_first_specification .

cb:component-zip_reader_component a tb:Component ;
    rdfs:label "ZIP Reader component" ;
    tb:exposesParameter cb:implementation-data_reader-reader_file ;
    tb:hasImplementation cb:implementation-data_reader ;
    tb:hasTransformation ( [ a tb:LoaderTransformation ;
                tb:transformation_language "LOADER" ;
                tb:transformation_query "Set dataset AS output " ] ) ;
    tb:overridesParameter cb:component-zip_reader_component-format_zip_specification .

cb:ram a tb:ExperimentConstraint ;
    rdfs:label "RAM" ;
    tb:constraintType "Range" ;
    tb:hasOptionExplorerName "ram" ;
    tb:isHard false .

cb:usingGPU a tb:ExperimentConstraint ;
    rdfs:label "GPU" ;
    tb:constraintType "Literal" ;
    tb:hasOptionExplorerName "pu" ;
    tb:isHard false .

dmop:containsNulls rdfs:subPropertyOf dmop:ColumnValueInfoProperty .

dmop:isCategorical rdfs:subPropertyOf dmop:ColumnInfoProperty .

dmop:isNormalized rdfs:subPropertyOf dmop:DatasetValueInfoProperty .

dmop:isTestDataset rdfs:subPropertyOf dmop:DatasetInfoProperty .

dmop:isTrainDataset rdfs:subPropertyOf dmop:DatasetInfoProperty .

cb:BarChartVisualization rdfs:subClassOf cb:Visualization .

cb:DataExport a tb:Task .

cb:DataImport a tb:Task .

cb:DataLoading a tb:Algorithm ;
    rdfs:label "DataLoading" ;
    tb:solves cb:DataImport .

cb:DataStoring a tb:Algorithm ;
    rdfs:label "DataStoring" ;
    tb:solves cb:DataExport .

cb:DecisionTreeModel rdfs:subClassOf cb:Model .

cb:DuplicationRemoval a tb:Task ;
    tb:subtaskOf cb:DataCleaning .

cb:FeatureColumnProperty sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isFeature .

cb:FeatureColumnShape a sh:NodeShape ;
    sh:property cb:FeatureColumnProperty ;
    sh:targetClass dmop:Column .

cb:HeatMapVisualization rdfs:subClassOf cb:Visualization .

cb:HistogramVisualization rdfs:subClassOf cb:Visualization .

cb:KNIME-implementation-knime_csv_reader-append_path_column_internals a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "append_path_column_Internals" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-autodetect_buffer_size a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:integer ;
    tb:has_default_value 1048576 ;
    tb:key "autodetect_buffer_size" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-charset a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:key "charset" ;
    tb:knime_path "model/encoding" .

cb:KNIME-implementation-knime_csv_reader-column_delimiter a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "," ;
    tb:key "column_delimiter" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-comment_char a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "#" ;
    tb:key "comment_char" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-connected_fs a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "connected_fs" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-convenience_fs_category a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "convenience_fs_category" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-custom_url_timeout a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:integer ;
    tb:has_default_value 1000 ;
    tb:key "custom_url_timeout" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-decimal_separator a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "." ;
    tb:key "decimal_separator" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-enabledstatus a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "EnabledStatus" ;
    tb:knime_path "model/settings/file_selection/filter_mode_Internals",
        "model/settings/file_selection_Internals" .

cb:KNIME-implementation-knime_csv_reader-fail_on_differing_specs a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "fail_on_differing_specs" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-file_system_type a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "file_system_type" ;
    tb:knime_path "model/settings/file_selection/path" .

cb:KNIME-implementation-knime_csv_reader-files_extension_case_sensitive a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "files_extension_case_sensitive" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-files_extension_expression a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "files_extension_expression" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-files_name_case_sensitive a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "files_name_case_sensitive" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-files_name_expression a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "*" ;
    tb:key "files_name_expression" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-files_name_filter_type a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "WILDCARD" ;
    tb:key "files_name_filter_type" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-filter_files_extension a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "filter_files_extension" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-filter_files_name a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "filter_files_name" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-filter_folders_name a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "filter_folders_name" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-filter_mode a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "FILE" ;
    tb:key "filter_mode" ;
    tb:knime_path "model/settings/file_selection/filter_mode" .

cb:KNIME-implementation-knime_csv_reader-folders_name_case_sensitive a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "folders_name_case_sensitive" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-folders_name_expression a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "*" ;
    tb:key "folders_name_expression" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-folders_name_filter_type a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "WILDCARD" ;
    tb:key "folders_name_filter_type" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-follow_links a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "follow_links" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-format a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_reader-format ;
    tb:hasLevel cb:KNIME-implementation-knime_csv_reader-format-CSV ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "CSV" ;
    tb:key "Format" ;
    tb:knime_path cb:NONE .

cb:KNIME-implementation-knime_csv_reader-format-CSV a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-CSV ;
    tb:hasValue "CSV" .

cb:KNIME-implementation-knime_csv_reader-has_column_header a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "has_column_header" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-has_fs_port a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "has_fs_port" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-has_row_id a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "has_row_id" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-include_hidden_files a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "include_hidden_files" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-include_hidden_folders a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "include_hidden_folders" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-include_special_files a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "include_special_files" ;
    tb:knime_path "model/settings/file_selection/filter_mode/filter_options" .

cb:KNIME-implementation-knime_csv_reader-include_subfolders a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "include_subfolders" ;
    tb:knime_path "model/settings/file_selection/filter_mode" .

cb:KNIME-implementation-knime_csv_reader-limit_data_rows a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "limit_data_rows" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-limit_data_rows_scanned a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "limit_data_rows_scanned" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-limit_memory_per_column a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "limit_memory_per_column" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-location_present a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value true ;
    tb:key "location_present" ;
    tb:knime_path "model/settings/file_selection/path" .

cb:KNIME-implementation-knime_csv_reader-max_data_rows_scanned a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:long ;
    tb:has_default_value 10000 ;
    tb:key "max_data_rows_scanned" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-max_rows a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:long ;
    tb:has_default_value 50 ;
    tb:key "max_rows" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-maximum_number_of_columns a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:integer ;
    tb:has_default_value 8192 ;
    tb:key "maximum_number_of_columns" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-mountpoint a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "mountpoint" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-number_of_lines_to_skip a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:long ;
    tb:has_default_value 1 ;
    tb:key "number_of_lines_to_skip" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-number_of_rows_to_skip a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:long ;
    tb:has_default_value 1 ;
    tb:key "number_of_rows_to_skip" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-overwritten_by_variable a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "overwritten_by_variable" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-path a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_reader-reader_file ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "$$PATH$$" ;
    tb:key "path" ;
    tb:knime_path "model/settings/file_selection/path" .

cb:KNIME-implementation-knime_csv_reader-path_column_name_internals a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "Path" ;
    tb:key "path_column_name_Internals" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-prepend_file_idx_to_row_id a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "prepend_file_idx_to_row_id" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-quote_char a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "\"" ;
    tb:key "quote_char" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-quote_escape_char a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "\"" ;
    tb:key "quote_escape_char" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-quote_option a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "REMOVE_QUOTES_AND_TRIM" ;
    tb:key "quote_option" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-relative_to a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "knime.workflow" ;
    tb:key "relative_to" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-replace_empty_quotes_with_missing a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "replace_empty_quotes_with_missing" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-row_delimiter a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "%%00013%%00010" ;
    tb:key "row_delimiter" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-save_table_spec_config_internals a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "save_table_spec_config_Internals" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-settingsmodelid a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "SMID_ReaderFileChooser" ;
    tb:key "SettingsModelID" ;
    tb:knime_path "model/settings/file_selection_Internals" .

cb:KNIME-implementation-knime_csv_reader-skip_data_rows a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "skip_data_rows" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-skip_empty_data_rows a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "skip_empty_data_rows" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-skip_lines a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "skip_lines" ;
    tb:knime_path "model/limit_rows" .

cb:KNIME-implementation-knime_csv_reader-smid_filtermode a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "SettingsModelID" ;
    tb:key "SMID_FilterMode" ;
    tb:knime_path "model/settings/file_selection/filter_mode_Internals" .

cb:KNIME-implementation-knime_csv_reader-spaceid a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "spaceId" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-spacename a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "spaceName" ;
    tb:knime_path "model/settings/file_selection/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_reader-spec_merge_mode_internals a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "UNION" ;
    tb:key "spec_merge_mode_Internals" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-support_short_data_rows a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "support_short_data_rows" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_reader-thousands_separator a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "%%00000" ;
    tb:key "thousands_separator" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_reader-use_line_break_row_delimiter a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "use_line_break_row_delimiter" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-add_custom_text_to_comment a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "add_custom_text_to_comment" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-add_table_name_to_comment a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "add_table_name_to_comment" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-add_time_to_comment a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "add_time_to_comment" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-add_user_to_comment a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "add_user_to_comment" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-character_set a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "windows-1252" ;
    tb:key "character_set" ;
    tb:knime_path "model/encoding" .

cb:KNIME-implementation-knime_csv_writer-column_delimiter a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "," ;
    tb:key "column_delimiter" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-comment_indentation a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "%%00009" ;
    tb:key "comment_indentation" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-comment_line_marker a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "#" ;
    tb:key "comment_line_marker" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-compress_with_gzip a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "compress_with_gzip" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-connected_fs a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "connected_fs" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-convenience_fs_category a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "convenience_fs_category" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-create_missing_folders a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "create_missing_folders" ;
    tb:knime_path "model/settings/file_chooser_settings" .

cb:KNIME-implementation-knime_csv_writer-custom_comment_text a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "custom_comment_text" ;
    tb:knime_path "model/comment_header_settings" .

cb:KNIME-implementation-knime_csv_writer-custom_url_timeout a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:integer ;
    tb:has_default_value 1000 ;
    tb:key "custom_url_timeout" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-decimal_separator a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype cb:char ;
    tb:has_default_value "." ;
    tb:key "decimal_separator" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-enabledstatus a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "EnabledStatus" ;
    tb:knime_path "model/settings/file_chooser_settings/filter_mode_Internals",
        "model/settings/file_chooser_settings_Internals" .

cb:KNIME-implementation-knime_csv_writer-file_system_type a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "file_system_type" ;
    tb:knime_path "model/settings/file_chooser_settings/path" .

cb:KNIME-implementation-knime_csv_writer-has_fs_port a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "has_fs_port" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-if_path_exists a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "fail" ;
    tb:key "if_path_exists" ;
    tb:knime_path "model/settings/file_chooser_settings" .

cb:KNIME-implementation-knime_csv_writer-keep_trailing_zero_in_decimals a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "keep_trailing_zero_in_decimals" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-location_present a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "location_present" ;
    tb:knime_path "model/settings/file_chooser_settings/path" .

cb:KNIME-implementation-knime_csv_writer-missing_value_pattern a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "missing_value_pattern" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-mountpoint a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "LOCAL" ;
    tb:key "mountpoint" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-overwritten_by_variable a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "overwritten_by_variable" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-path a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_writer-output_path ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "./output.csv" ;
    tb:key "path" ;
    tb:knime_path "model/settings/file_chooser_settings/path" .

cb:KNIME-implementation-knime_csv_writer-quote_char a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype cb:char ;
    tb:has_default_value "\"" ;
    tb:key "quote_char" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-quote_escape_char a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype cb:char ;
    tb:has_default_value "\"" ;
    tb:key "quote_escape_char" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-quote_mode a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "STRINGS_ONLY" ;
    tb:key "quote_mode" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-relative_to a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "knime.workflow.data" ;
    tb:key "relative_to" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-row_delimeter a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:key "row_delimeter" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-separator_replacement a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "separator_replacement" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-settingsmodelid a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "SMID_FilterMode",
        "SMID_WriterFileChooser" ;
    tb:key "SettingsModelID" ;
    tb:knime_path "model/settings/file_chooser_settings/filter_mode_Internals",
        "model/settings/file_chooser_settings_Internals" .

cb:KNIME-implementation-knime_csv_writer-skip_column_header_on_append a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "skip_column_header_on_append" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-spaceid a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "spaceId" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-spacename a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:key "spaceName" ;
    tb:knime_path "model/settings/file_chooser_settings/file_system_chooser__Internals" .

cb:KNIME-implementation-knime_csv_writer-use_scientific_format a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "use_scientific_format" ;
    tb:knime_path "model/advanced_settings" .

cb:KNIME-implementation-knime_csv_writer-write_column_header a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:key "write_column_header" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_csv_writer-write_row_header a tb:EngineParameter,
        tb:EngineSpecificParameter ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value false ;
    tb:key "write_row_header" ;
    tb:knime_path "model/settings" .

cb:KNIME-implementation-knime_data_partitioning-class_column a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_partitioning-class_columns ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:key "class_column" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-count a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-data_partitioning-count_\(absolute_size\) ] ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 100 ;
    tb:key "count" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-fraction a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-data_partitioning-fraction_\(relative_size\) ] ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 8e-01 ;
    tb:key "fraction" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-method a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_partitioning-size_type ;
    tb:hasLevel cb:KNIME-implementation-knime_data_partitioning-method-Absolute,
        cb:KNIME-implementation-knime_data_partitioning-method-Relative ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:key "method" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-method-Absolute a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_partitioning-size_type-Absolute ;
    tb:hasValue "Absolute" .

cb:KNIME-implementation-knime_data_partitioning-method-Relative a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_partitioning-size_type-Relative ;
    tb:hasValue "Relative" .

cb:KNIME-implementation-knime_data_partitioning-random_seed a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-data_partitioning-random_seed ] ;
    tb:engine "KNIME" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value cb:NONE ;
    tb:key "random_seed" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-samplingmethod a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "KNIME" ;
    tb:hasBaseParameter cb:implementation-data_partitioning-sampling_method ;
    tb:hasLevel cb:KNIME-implementation-knime_data_partitioning-samplingmethod-First,
        cb:KNIME-implementation-knime_data_partitioning-samplingmethod-Random ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:key "samplingMethod" ;
    tb:knime_path "model" .

cb:KNIME-implementation-knime_data_partitioning-samplingmethod-First a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_partitioning-sampling_method-First ;
    tb:hasValue "First" .

cb:KNIME-implementation-knime_data_partitioning-samplingmethod-Random a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_partitioning-sampling_method-Random ;
    tb:hasValue "Random" .

cb:LabelColumnProperty sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isLabel .

cb:LabeledTensorDatasetShape a sh:NodeShape ;
    sh:property [ sh:minCount 1 ;
            sh:path dmop:hasArray ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue true ;
                    sh:path dmop:isLabel ] ] ;
    sh:targetClass dmop:TensorDataset .

cb:LinePlotVisualization rdfs:subClassOf cb:Visualization .

cb:LowMVTabularDatasetShape a sh:NodeShape ;
    sh:property cb:missingValueConstraint ;
    sh:targetClass dmop:TabularDataset ;
    tb:has_weight 2 .

cb:NonNullColumnShape a sh:NodeShape ;
    sh:property cb:NonNullColumnProperty ;
    sh:targetClass dmop:Column .

cb:NonNullNumericFeatureColumnShape a sh:NodeShape ;
    sh:property cb:NonNullColumnProperty,
        cb:NumericColumnProperty ;
    sh:targetClass cb:FeatureColumnShape .

cb:NormalizerModel rdfs:subClassOf cb:Model .

cb:NumericCategoricalModel rdfs:subClassOf cb:Model .

cb:PieChartVisualization rdfs:subClassOf cb:Visualization .

cb:Python-implementation-python_data_partitioning-random_state a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:NONE ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "random_state" .

cb:Python-implementation-python_data_partitioning-shuffle a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#EQ" ;
            tb:hasTerm1 cb:implementation-data_partitioning-sampling_method ;
            tb:hasTerm2 "Random" ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value true ;
    tb:isControlParameter false ;
    tb:key "shuffle" .

cb:Python-implementation-python_data_partitioning-test_size a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:NONE ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:numeric ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "test_size" .

cb:Python-implementation-python_data_partitioning-train_size a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#SUM" ;
            tb:hasTerm1 [ a tb:AlgebraicExpression ;
                    tb:hasOperation "https://extremexp.eu/ontology/cbox#MUL" ;
                    tb:hasTerm1 [ a tb:AlgebraicExpression ;
                            tb:hasOperation "https://extremexp.eu/ontology/cbox#EQ" ;
                            tb:hasTerm1 cb:implementation-data_partitioning-size_type ;
                            tb:hasTerm2 "Absolute" ] ;
                    tb:hasTerm2 cb:implementation-data_partitioning-count_\(absolute_size\) ] ;
            tb:hasTerm2 [ a tb:AlgebraicExpression ;
                    tb:hasOperation "https://extremexp.eu/ontology/cbox#MUL" ;
                    tb:hasTerm1 [ a tb:AlgebraicExpression ;
                            tb:hasOperation "https://extremexp.eu/ontology/cbox#EQ" ;
                            tb:hasTerm1 cb:implementation-data_partitioning-size_type ;
                            tb:hasTerm2 "Relative" ] ;
                    tb:hasTerm2 cb:implementation-data_partitioning-fraction_\(relative_size\) ] ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:numeric ;
    tb:has_default_value 2.5e-01 ;
    tb:isControlParameter false ;
    tb:key "train_size" .

cb:Python-implementation-python_data_reader-format a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-data_reader-format ;
    tb:hasLevel cb:Python-implementation-python_data_reader-format-CSV,
        cb:Python-implementation-python_data_reader-format-Folder,
        cb:Python-implementation-python_data_reader-format-NumpyZip,
        cb:Python-implementation-python_data_reader-format-Parquet,
        cb:Python-implementation-python_data_reader-format-ZIP ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "CSV" ;
    tb:isControlParameter true ;
    tb:key "format" .

cb:Python-implementation-python_data_reader-format-CSV a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-CSV ;
    tb:hasValue "CSV" .

cb:Python-implementation-python_data_reader-format-Folder a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-Folder ;
    tb:hasValue "Folder" .

cb:Python-implementation-python_data_reader-format-NumpyZip a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-NumpyZip ;
    tb:hasValue "NumpyZip" .

cb:Python-implementation-python_data_reader-format-Parquet a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-Parquet ;
    tb:hasValue "Parquet" .

cb:Python-implementation-python_data_reader-format-ZIP a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-data_reader-format-ZIP ;
    tb:hasValue "ZIP" .

cb:Python-implementation-python_data_reader-path a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-data_reader-reader_file ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "path" .

cb:Python-implementation-python_data_writer-path_or_buf a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-data_writer-output_path ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "path_or_buf" .

cb:Python-implementation-python_missing_value-categorical_columns a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-missing_value-categorical_columns ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "categorical_columns" .

cb:Python-implementation-python_missing_value-factor_strategy a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-missing_value-factor_strategy ;
    tb:hasLevel cb:Python-implementation-python_missing_value-factor_strategy-drop,
        cb:Python-implementation-python_missing_value-factor_strategy-most_frequent ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "most_frecuent" ;
    tb:isControlParameter false ;
    tb:key "Factor strategy" .

cb:Python-implementation-python_missing_value-factor_strategy-drop a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-missing_value-factor_strategy-Drop ;
    tb:hasValue "drop" .

cb:Python-implementation-python_missing_value-factor_strategy-most_frequent a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-missing_value-factor_strategy-MostFrequent ;
    tb:hasValue "most_frequent" .

cb:Python-implementation-python_missing_value-numeric_columns a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-missing_value-numeric_columns ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "numeric_columns" .

cb:Python-implementation-python_missing_value-numeric_strategy a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-missing_value-numeric_strategy ;
    tb:hasLevel cb:Python-implementation-python_missing_value-numeric_strategy-drop,
        cb:Python-implementation-python_missing_value-numeric_strategy-mean ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "mean" ;
    tb:isControlParameter false ;
    tb:key "Numeric strategy" .

cb:Python-implementation-python_missing_value-numeric_strategy-drop a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-missing_value-numeric_strategy-Drop ;
    tb:hasValue "drop" .

cb:Python-implementation-python_missing_value-numeric_strategy-mean a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-missing_value-numeric_strategy-MeanImputation ;
    tb:hasValue "mean" .

cb:Python-implementation-python_numerical_projection-columns a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-numerical_projection-projected_columns ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "[]" ;
    tb:isControlParameter false ;
    tb:key "columns" .

cb:Python-implementation-python_numerical_projection-target a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-numerical_projection-target_column ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "" ;
    tb:isControlParameter true ;
    tb:key "Target" .

cb:Python-implementation-python_svm_learner-c a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-svm_learner-overlapping_penalty ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1.1e+00 ;
    tb:isControlParameter false ;
    tb:key "C" .

cb:Python-implementation-python_svm_learner-coef0 a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-svm_learner-bias ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0e+00 ;
    tb:isControlParameter false ;
    tb:key "coef0" .

cb:Python-implementation-python_svm_learner-degree a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-svm_learner-power ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:integer ;
    tb:has_default_value 3 ;
    tb:isControlParameter false ;
    tb:key "degree" .

cb:Python-implementation-python_svm_learner-gamma a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-svm_learner-gamma ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value "scale" ;
    tb:isControlParameter false ;
    tb:key "gamma" .

cb:Python-implementation-python_svm_learner-kernel a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-svm_learner-kernel_type ;
    tb:hasLevel cb:Python-implementation-python_svm_learner-kernel-poly,
        cb:Python-implementation-python_svm_learner-kernel-rbf,
        cb:Python-implementation-python_svm_learner-kernel-sigmoid ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "rbf" ;
    tb:isControlParameter false ;
    tb:key "kernel" .

cb:Python-implementation-python_svm_learner-kernel-poly a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-svm_learner-kernel_type-Polynomial ;
    tb:hasValue "poly" .

cb:Python-implementation-python_svm_learner-kernel-rbf a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-svm_learner-kernel_type-RBF ;
    tb:hasValue "rbf" .

cb:Python-implementation-python_svm_learner-kernel-sigmoid a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-svm_learner-kernel_type-Sigmoid ;
    tb:hasValue "sigmoid" .

cb:Python-implementation-python_svm_learner-target a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-svm_learner-svm_class_column ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "target" ;
    tb:isControlParameter true ;
    tb:key "Target" .

cb:Python-implementation-python_xgboost_learner-base_score a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-base_score ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 5e-01 ;
    tb:isControlParameter false ;
    tb:key "base_score" .

cb:Python-implementation-python_xgboost_learner-booster a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-booster ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-booster-dart,
        cb:Python-implementation-python_xgboost_learner-booster-gblinear,
        cb:Python-implementation-python_xgboost_learner-booster-gbtree ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "gbtree" ;
    tb:isControlParameter false ;
    tb:key "booster" .

cb:Python-implementation-python_xgboost_learner-booster-dart a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-booster-dart ;
    tb:hasValue "dart" .

cb:Python-implementation-python_xgboost_learner-booster-gblinear a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-booster-linear ;
    tb:hasValue "gblinear" .

cb:Python-implementation-python_xgboost_learner-booster-gbtree a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-booster-tree ;
    tb:hasValue "gbtree" .

cb:Python-implementation-python_xgboost_learner-colsample_bylevel a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-col_sample_by_level ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "colsample_bylevel" .

cb:Python-implementation-python_xgboost_learner-colsample_bynode a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-col_sample_by_node ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "colsample_bynode" .

cb:Python-implementation-python_xgboost_learner-colsample_bytree a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-col_sample_by_tree ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "colsample_bytree" .

cb:Python-implementation-python_xgboost_learner-feature_selector a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-feature_selector ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-feature_selector-cyclic,
        cb:Python-implementation-python_xgboost_learner-feature_selector-greedy,
        cb:Python-implementation-python_xgboost_learner-feature_selector-random,
        cb:Python-implementation-python_xgboost_learner-feature_selector-shuffle,
        cb:Python-implementation-python_xgboost_learner-feature_selector-thrifty ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "cyclic" ;
    tb:isControlParameter false ;
    tb:key "feature_selector" .

cb:Python-implementation-python_xgboost_learner-feature_selector-cyclic a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-feature_selector-cyclic ;
    tb:hasValue "cyclic" .

cb:Python-implementation-python_xgboost_learner-feature_selector-greedy a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-feature_selector-greedy ;
    tb:hasValue "greedy" .

cb:Python-implementation-python_xgboost_learner-feature_selector-random a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-feature_selector-random ;
    tb:hasValue "random" .

cb:Python-implementation-python_xgboost_learner-feature_selector-shuffle a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-feature_selector-shuffle ;
    tb:hasValue "shuffle" .

cb:Python-implementation-python_xgboost_learner-feature_selector-thrifty a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-feature_selector-thrifty ;
    tb:hasValue "thrifty" .

cb:Python-implementation-python_xgboost_learner-gamma a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-gamma ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0e+00 ;
    tb:isControlParameter false ;
    tb:key "gamma" .

cb:Python-implementation-python_xgboost_learner-grow_policy a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-grow_policy ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-grow_policy-depthwise,
        cb:Python-implementation-python_xgboost_learner-grow_policy-lossguide ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "depthwise" ;
    tb:isControlParameter false ;
    tb:key "grow_policy" .

cb:Python-implementation-python_xgboost_learner-grow_policy-depthwise a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-grow_policy-depthwise ;
    tb:hasValue "depthwise" .

cb:Python-implementation-python_xgboost_learner-grow_policy-lossguide a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-grow_policy-lossguide ;
    tb:hasValue "lossguide" .

cb:Python-implementation-python_xgboost_learner-learning_rate a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-eta ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e-01 ;
    tb:isControlParameter false ;
    tb:key "learning_rate" .

cb:Python-implementation-python_xgboost_learner-max_bin a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-max_bin ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 256 ;
    tb:isControlParameter false ;
    tb:key "max_bin" .

cb:Python-implementation-python_xgboost_learner-max_delta_step a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-max_delta_step ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0e+00 ;
    tb:isControlParameter false ;
    tb:key "max_delta_step" .

cb:Python-implementation-python_xgboost_learner-max_depth a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-max_depth ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 3 ;
    tb:isControlParameter false ;
    tb:key "max_depth" .

cb:Python-implementation-python_xgboost_learner-max_leaves a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-max_leaves ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 0 ;
    tb:isControlParameter false ;
    tb:key "max_leaves" .

cb:Python-implementation-python_xgboost_learner-min_child_weight a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-min_child_weight ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "min_child_weight" .

cb:Python-implementation-python_xgboost_learner-n_estimators a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-boosting_rounds ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 100 ;
    tb:isControlParameter false ;
    tb:key "n_estimators" .

cb:Python-implementation-python_xgboost_learner-n_jobs a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-number_of_threads ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "n_jobs" .

cb:Python-implementation-python_xgboost_learner-normalize_type a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-normalize_type ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-normalize_type-forest,
        cb:Python-implementation-python_xgboost_learner-normalize_type-tree ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "tree" ;
    tb:isControlParameter false ;
    tb:key "normalize_type" .

cb:Python-implementation-python_xgboost_learner-normalize_type-forest a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-normalize_type-forest ;
    tb:hasValue "forest" .

cb:Python-implementation-python_xgboost_learner-normalize_type-tree a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-normalize_type-tree ;
    tb:hasValue "tree" .

cb:Python-implementation-python_xgboost_learner-objective a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-objective ;
    tb:hasLevel <https://extremexp.eu/ontology/cbox#Python-implementation-python_xgboost_learner-objective-binary:logistic>,
        <https://extremexp.eu/ontology/cbox#Python-implementation-python_xgboost_learner-objective-multi:softprob> ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "binary:logistic" ;
    tb:isControlParameter false ;
    tb:key "objective" .

<https://extremexp.eu/ontology/cbox#Python-implementation-python_xgboost_learner-objective-binary:logistic> a tb:FactorLevel ;
    tb:equivalentTo <https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-binary:logistic> ;
    tb:hasValue "binary:logistic" .

<https://extremexp.eu/ontology/cbox#Python-implementation-python_xgboost_learner-objective-multi:softprob> a tb:FactorLevel ;
    tb:equivalentTo <https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-multi:softprob> ;
    tb:hasValue "multi:softprob" .

cb:Python-implementation-python_xgboost_learner-one_drop a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-one_drop ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:boolean ;
    tb:has_default_value 0 ;
    tb:isControlParameter false ;
    tb:key "one_drop" .

cb:Python-implementation-python_xgboost_learner-random_state a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-random_seed ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 0 ;
    tb:isControlParameter false ;
    tb:key "random_state" .

cb:Python-implementation-python_xgboost_learner-rate_drop a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-rate_drop ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0e+00 ;
    tb:isControlParameter false ;
    tb:key "rate_drop" .

cb:Python-implementation-python_xgboost_learner-reg_alpha a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-alpha ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0 ;
    tb:isControlParameter false ;
    tb:key "reg_alpha" .

cb:Python-implementation-python_xgboost_learner-reg_lambda a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-lambda ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1 ;
    tb:isControlParameter false ;
    tb:key "reg_lambda" .

cb:Python-implementation-python_xgboost_learner-sample_type a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-sample_type ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-sample_type-uniform,
        cb:Python-implementation-python_xgboost_learner-sample_type-weighted ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "uniform" ;
    tb:isControlParameter false ;
    tb:key "sample_type" .

cb:Python-implementation-python_xgboost_learner-sample_type-uniform a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-sample_type-uniform ;
    tb:hasValue "uniform" .

cb:Python-implementation-python_xgboost_learner-sample_type-weighted a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-sample_type-weighted ;
    tb:hasValue "weighted" .

cb:Python-implementation-python_xgboost_learner-sample_weight a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-sample_weight ;
    tb:has_datatype xsd:string ;
    tb:has_default_value cb:NONE ;
    tb:isControlParameter false ;
    tb:key "sample_weight" .

cb:Python-implementation-python_xgboost_learner-scale_pos_weight a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-scale_pos_weight ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "scale_pos_weight" .

cb:Python-implementation-python_xgboost_learner-sketch_eps a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-sketch_eps ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 3e-02 ;
    tb:isControlParameter false ;
    tb:key "sketch_eps" .

cb:Python-implementation-python_xgboost_learner-skip_drop a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-skip_drop ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 0e+00 ;
    tb:isControlParameter false ;
    tb:key "skip_drop" .

cb:Python-implementation-python_xgboost_learner-subsample a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-subsample ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:double ;
    tb:has_default_value 1e+00 ;
    tb:isControlParameter false ;
    tb:key "subsample" .

cb:Python-implementation-python_xgboost_learner-target a tb:EngineParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-target_column ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "target" ;
    tb:isControlParameter true ;
    tb:key "Target" .

cb:Python-implementation-python_xgboost_learner-top_k a tb:DerivedParameter,
        tb:EngineParameter,
        tb:NumericParameter ;
    tb:derivedFrom [ a tb:AlgebraicExpression ;
            tb:hasOperation "https://extremexp.eu/ontology/cbox#COPY" ;
            tb:hasTerm1 cb:implementation-xgboost_learner-top_k ] ;
    tb:engine "Python" ;
    tb:has_datatype xsd:int ;
    tb:has_default_value 0 ;
    tb:isControlParameter false ;
    tb:key "top_k" .

cb:Python-implementation-python_xgboost_learner-tree_method a tb:EngineParameter,
        tb:FactorParameter,
        tb:TextParameter ;
    tb:engine "Python" ;
    tb:hasBaseParameter cb:implementation-xgboost_learner-tree_method ;
    tb:hasLevel cb:Python-implementation-python_xgboost_learner-tree_method-approx,
        cb:Python-implementation-python_xgboost_learner-tree_method-auto,
        cb:Python-implementation-python_xgboost_learner-tree_method-exact,
        cb:Python-implementation-python_xgboost_learner-tree_method-hist ;
    tb:has_datatype xsd:string ;
    tb:has_default_value "auto" ;
    tb:isControlParameter false ;
    tb:key "tree_method" .

cb:Python-implementation-python_xgboost_learner-tree_method-approx a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-tree_method-approx ;
    tb:hasValue "approx" .

cb:Python-implementation-python_xgboost_learner-tree_method-auto a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-tree_method-auto ;
    tb:hasValue "auto" .

cb:Python-implementation-python_xgboost_learner-tree_method-exact a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-tree_method-exact ;
    tb:hasValue "exact" .

cb:Python-implementation-python_xgboost_learner-tree_method-hist a tb:FactorLevel ;
    tb:equivalentTo cb:implementation-xgboost_learner-tree_method-hist ;
    tb:hasValue "hist" .

cb:ScatterPlotVisualization rdfs:subClassOf cb:Visualization .

cb:component-convolutional_nn_learner a tb:LearnerComponent ;
    rdfs:label "Convolutional NN Learner" ;
    tb:exposesParameter cb:implementation-nn_learner-class_column ;
    tb:hasApplier cb:component-nn_predictor ;
    tb:hasImplementation cb:implementation-nn_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-convolutional_nn_learner-nn_type_convolutional_specification .

cb:component-convolutional_nn_multidimensional_learner a tb:LearnerComponent ;
    rdfs:label "Convolutional NN Multidimensional Learner" ;
    tb:exposesParameter cb:implementation-nn_multidimensional_learner-label_array ;
    tb:hasApplier cb:component-nn_multidimensional_predictor ;
    tb:hasImplementation cb:implementation-nn_multidimensional_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-convolutional_nn_multidimensional_learner-nn_type_convolutional_specification .

cb:component-drop_rows_with_missing_values a tb:LearnerComponent ;
    rdfs:label "Drop Rows with Missing Values" ;
    tb:hasApplier cb:component-missing_value_management_applier ;
    tb:hasImplementation cb:implementation-missing_value ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:LowMVTabularDatasetShape ;
            tb:relatedtoTask cb:Classification ],
        [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:DataVisualization ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?column dmop:containsNulls false.
}
WHERE {
    $output1 dmop:hasColumn ?column.
    ?column dmop:containsNulls true.
}
""" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output1 dmop:numberOfRows ?rows1.
}
WHERE {
    $output1 dmop:numberOfRows ?rows1.
}
""" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
INSERT DATA {
    $output2 cb:removesProperty dmop:numberOfRows.
}
""" ] ) ;
    tb:overridesParameter cb:component-drop_rows_with_missing_values-factor_strategy_drop_specification,
        cb:component-drop_rows_with_missing_values-numeric_strategy_drop_specification .

cb:component-feedforward_nn_learner a tb:LearnerComponent ;
    rdfs:label "FeedForward NN Learner" ;
    tb:exposesParameter cb:implementation-nn_learner-class_column ;
    tb:hasApplier cb:component-nn_predictor ;
    tb:hasImplementation cb:implementation-nn_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-feedforward_nn_learner-nn_type_feedforward_specification .

cb:component-feedforward_nn_multidimensional_learner a tb:LearnerComponent ;
    rdfs:label "FeedForward NN Multidimensional Learner" ;
    tb:exposesParameter cb:implementation-nn_multidimensional_learner-label_array ;
    tb:hasApplier cb:component-nn_multidimensional_predictor ;
    tb:hasImplementation cb:implementation-nn_multidimensional_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-feedforward_nn_multidimensional_learner-nn_type_feedforward_specification .

cb:component-lstm_nn_learner a tb:LearnerComponent ;
    rdfs:label "LSTM NN Learner" ;
    tb:exposesParameter cb:implementation-nn_learner-class_column ;
    tb:hasApplier cb:component-nn_predictor ;
    tb:hasImplementation cb:implementation-nn_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-lstm_nn_learner-nn_type_lstm_specification .

cb:component-lstm_nn_multidimensional_learner a tb:LearnerComponent ;
    rdfs:label "LSTM NN Multidimensional Learner" ;
    tb:exposesParameter cb:implementation-nn_multidimensional_learner-label_array ;
    tb:hasApplier cb:component-nn_multidimensional_predictor ;
    tb:hasImplementation cb:implementation-nn_multidimensional_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-lstm_nn_multidimensional_learner-nn_type_lstm_specification .

cb:component-mean_imputation a tb:LearnerComponent ;
    rdfs:label "Mean Imputation" ;
    tb:hasApplier cb:component-missing_value_management_applier ;
    tb:hasImplementation cb:implementation-missing_value ;
    tb:hasRule [ a tb:Rule ;
            tb:has_rank 1 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:DataVisualization ],
        [ a tb:Rule ;
            tb:has_rank 2 ;
            tb:relatedtoDatatag cb:TabularDataset ;
            tb:relatedtoTask cb:Classification ] ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?column dmop:containsNulls false.
}
WHERE {
    $output1 dmop:hasColumn ?column.
    ?column dmop:containsNulls true.
}
""" ] ) ;
    tb:overridesParameter cb:component-mean_imputation-factor_strategy_mostfrecuent_specification,
        cb:component-mean_imputation-numeric_strategy_meanimputation_specification .

cb:component-projection_numerical_learner a tb:LearnerComponent ;
    rdfs:label "Projection numerical Learner" ;
    tb:hasApplier cb:component-projection_numerical_predictor ;
    tb:hasImplementation cb:implementation-numerical_projection ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 1 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 1 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?column ?predicate ?object.
    $output1 dmop:hasColumn ?column.
    $output1 dmop:numberOfColumns ?numCols.
}
INSERT {
    $output1 dmop:numberOfColumns ?newNumCols.
}
WHERE {
    # Match non-numeric columns to delete
    $output1 dmop:hasColumn ?column.
    ?column dmop:isFeature true ;
            dmop:hasDataPrimitiveTypeColumn ?type ;
            dmop:hasColumnName ?label ;
            ?predicate ?object .

    FILTER(?type NOT IN (
        dmop:Float, dmop:Int, dmop:Number,
        dmop:Double, dmop:Long, dmop:Short, dmop:Integer
    ))

    BIND(5 AS ?newNumCols)
}
""" ] ) .

cb:component-projection_numerical_predictor a tb:ApplierComponent ;
    rdfs:label "Projection numerical Predictor" ;
    tb:hasImplementation cb:implementation-numeric_projection_predictor ;
    tb:hasLearner cb:component-projection_numerical_learner ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 2 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 2 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    ?column ?predicate ?object.
    $output1 dmop:hasColumn ?column.
    $output1 dmop:numberOfColumns ?numCols.
}
INSERT {
    $output1 dmop:numberOfColumns ?newNumCols.
}
WHERE {
    # Match non-numeric columns to delete
    $output1 dmop:hasColumn ?column.
    ?column dmop:isFeature true ;
            dmop:hasDataPrimitiveTypeColumn ?type ;
            dmop:hasColumnName ?label ;
            ?predicate ?object .

    FILTER(?type NOT IN (
        dmop:Float, dmop:Int, dmop:Number,
        dmop:Double, dmop:Long, dmop:Short, dmop:Integer
    ))

    BIND(5 AS ?newNumCols)
}
""" ] ) .

cb:component-recurrent_nn_learner a tb:LearnerComponent ;
    rdfs:label "Recurrent NN Learner" ;
    tb:exposesParameter cb:implementation-nn_learner-class_column ;
    tb:hasApplier cb:component-nn_predictor ;
    tb:hasImplementation cb:implementation-nn_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-recurrent_nn_learner-nn_type_recurrent_specification .

cb:component-recurrent_nn_multidimensional_learner a tb:LearnerComponent ;
    rdfs:label "Recurrent NN Multidimensional Learner" ;
    tb:exposesParameter cb:implementation-nn_multidimensional_learner-label_array ;
    tb:hasApplier cb:component-nn_multidimensional_predictor ;
    tb:hasImplementation cb:implementation-nn_multidimensional_learner ;
    tb:hasTransformation [ rdf:rest () ] ;
    tb:overridesParameter cb:component-recurrent_nn_multidimensional_learner-nn_type_recurrent_specification .

cb:component-xgboost_dart_learner a tb:LearnerComponent ;
    rdfs:label "XGBoost Dart Learner" ;
    tb:exposesParameter cb:implementation-xgboost_learner-target_column ;
    tb:hasApplier cb:component-xgboost_predictor ;
    tb:hasImplementation cb:implementation-xgboost_learner ;
    tb:hasTransformation ( [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
INSERT {
    $output1 cb:setsClassColumnName "Prediction (?label)" .
}
WHERE {
    $input1 dmop:hasColumn ?column .
    ?column dmop:isLabel true ;
            dmop:hasColumnName ?label .
}
            """ ] ) ;
    tb:overridesParameter cb:component-xgboost_dart_learner-booster_dart_specification .

cb:component-xgboost_linear_learner a tb:LearnerComponent ;
    rdfs:label "XGBoost Linear Learner" ;
    tb:exposesParameter cb:implementation-xgboost_learner-target_column ;
    tb:hasApplier cb:component-xgboost_predictor ;
    tb:hasImplementation cb:implementation-xgboost_learner ;
    tb:hasTransformation ( [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
INSERT {
    $output1 cb:setsClassColumnName "Prediction (?label)" .
}
WHERE {
    $input1 dmop:hasColumn ?column .
    ?column dmop:isLabel true ;
            dmop:hasColumnName ?label .
}
            """ ] ) ;
    tb:overridesParameter cb:component-xgboost_linear_learner-booster_linear_specification .

cb:component-xgboost_tree_learner a tb:LearnerComponent ;
    rdfs:label "XGBoost Tree Learner" ;
    tb:exposesParameter cb:implementation-xgboost_learner-target_column ;
    tb:hasApplier cb:component-xgboost_predictor ;
    tb:hasImplementation cb:implementation-xgboost_learner ;
    tb:hasTransformation ( [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
INSERT {
    $output1 cb:setsClassColumnName "Prediction (?label)" .
}
WHERE {
    $input1 dmop:hasColumn ?column .
    ?column dmop:isLabel true ;
            dmop:hasColumnName ?label .
}
            """ ] ) ;
    tb:overridesParameter cb:component-xgboost_tree_learner-booster_tree_specification .

cb:floatTypeConstraint a sh:PropertyShape ;
    sh:hasValue dmop:Float ;
    sh:path dmop:hasDataPrimitiveTypeColumn .

cb:hasAnyStringCategoricalColumn a sh:PropertyShape ;
    sh:path dmop:hasColumn ;
    sh:qualifiedMaxCount 0 ;
    sh:qualifiedValueShape [ a sh:NodeShape ;
            sh:and [ a sh:AndConstraintComponent ;
                    rdf:first cb:isCategorical ;
                    rdf:rest ( cb:isFeature cb:isStringConstraint ) ] ] .

cb:hasNoOutliersConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue false ;
    sh:path dmop:containsOutliers .

cb:hasOutliersConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:containsOutliers .

cb:implementation-missing_value-float a tb:Parameter ;
    rdfs:label "Float" ;
    tb:has_condition "$$FLOAT_COLUMN$$" ;
    tb:has_datatype xsd:string ;
    tb:has_position 2 .

cb:implementation-missing_value-integer a tb:Parameter ;
    rdfs:label "Integer" ;
    tb:has_condition "$$INTEGER_COLUMN$$" ;
    tb:has_datatype xsd:string ;
    tb:has_position 0 .

cb:implementation-missing_value-string a tb:Parameter ;
    rdfs:label "String" ;
    tb:has_condition "$$STRING_COLUMN$$" ;
    tb:has_datatype xsd:string ;
    tb:has_position 1 .

cb:implementation-nn_learner-nn_type a tb:Parameter ;
    rdfs:label "NN type" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 1 ;
    tb:specifiedBy cb:component-convolutional_nn_learner-nn_type_convolutional_specification,
        cb:component-feedforward_nn_learner-nn_type_feedforward_specification,
        cb:component-lstm_nn_learner-nn_type_lstm_specification,
        cb:component-recurrent_nn_learner-nn_type_recurrent_specification .

cb:implementation-nn_multidimensional_learner-nn_type a tb:Parameter ;
    rdfs:label "NN type" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 1 ;
    tb:specifiedBy cb:component-convolutional_nn_multidimensional_learner-nn_type_convolutional_specification,
        cb:component-feedforward_nn_multidimensional_learner-nn_type_feedforward_specification,
        cb:component-lstm_nn_multidimensional_learner-nn_type_lstm_specification,
        cb:component-recurrent_nn_multidimensional_learner-nn_type_recurrent_specification .

cb:implementation-nn_multidimensional_predictor-add_probabilities a tb:Parameter ;
    rdfs:label "Add probabilities" ;
    tb:has_condition "add probabilities" ;
    tb:has_datatype xsd:boolean ;
    tb:has_defaultvalue false ;
    tb:has_position 2 .

cb:implementation-nn_multidimensional_predictor-change_prediction a tb:Parameter ;
    rdfs:label "Change prediction" ;
    tb:has_condition "change prediction" ;
    tb:has_datatype xsd:boolean ;
    tb:has_defaultvalue false ;
    tb:has_position 1 .

cb:implementation-nn_multidimensional_predictor-class_probability_suffix a tb:Parameter ;
    rdfs:label "Class probability suffix" ;
    tb:has_condition "class probability suffix" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "" ;
    tb:has_position 3 .

cb:implementation-nn_multidimensional_predictor-prediction_array_name a tb:Parameter ;
    rdfs:label "Prediction array name" ;
    tb:has_condition "prediction array name" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "Prediction ($$LABEL$$)" ;
    tb:has_position 0 .

cb:implementation-nn_predictor-add_probabilities a tb:Parameter ;
    rdfs:label "Add probabilities" ;
    tb:has_condition "add probabilities" ;
    tb:has_datatype xsd:boolean ;
    tb:has_defaultvalue false ;
    tb:has_position 2 .

cb:implementation-nn_predictor-change_prediction a tb:Parameter ;
    rdfs:label "Change prediction" ;
    tb:has_condition "change prediction" ;
    tb:has_datatype xsd:boolean ;
    tb:has_defaultvalue false ;
    tb:has_position 1 .

cb:implementation-nn_predictor-class_probability_suffix a tb:Parameter ;
    rdfs:label "Class probability suffix" ;
    tb:has_condition "class probability suffix" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "" ;
    tb:has_position 3 .

cb:implementation-nn_predictor-prediction_column_name a tb:Parameter ;
    rdfs:label "Prediction column name" ;
    tb:has_condition "prediction column name" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "Prediction ($$LABEL$$)" ;
    tb:has_position 0 .

cb:implementation-tensor_data_partitioning-class_columns a tb:Parameter ;
    rdfs:label "Class columns" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 5 .

cb:implementation-tensor_data_partitioning-partition_method a tb:Parameter ;
    rdfs:label "Partition method" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 0 ;
    tb:specifiedBy cb:component-random_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification,
        cb:component-random_relative_train_test_split_\(tensor\)-partition_method_relative_specification,
        cb:component-top_k_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification,
        cb:component-top_k_relative_train_test_split_\(tensor\)-partition_method_relative_specification .

cb:implementation-tensor_data_partitioning-sampling_method a tb:Parameter ;
    rdfs:label "Sampling method" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 1 ;
    tb:specifiedBy cb:component-random_absolute_train_test_split_\(tensor\)-sampling_method_random_specification,
        cb:component-random_relative_train_test_split_\(tensor\)-sampling_method_random_specification,
        cb:component-top_k_absolute_train_test_split_\(tensor\)-sampling_method_first_specification,
        cb:component-top_k_relative_train_test_split_\(tensor\)-sampling_method_first_specification .

cb:implementation-xgboost_learner-numeric_columns a tb:Parameter ;
    rdfs:label "Numeric columns" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$NUMERIC_COLUMNS$$" ;
    tb:has_position 1 .

cb:implementation-xgboost_learner-updater a tb:Parameter ;
    rdfs:label "Updater" ;
    tb:hasLevel cb:implementation-xgboost_learner-updater-CoordDescent,
        cb:implementation-xgboost_learner-updater-Shotgun ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 11 .

cb:implementation-xgboost_learner-updater-CoordDescent a tb:FactorLevel ;
    tb:hasValue "CoordDescent" .

cb:implementation-xgboost_learner-updater-Shotgun a tb:FactorLevel ;
    tb:hasValue "Shotgun" .

cb:integerTypeConstraint a sh:PropertyShape ;
    sh:hasValue dmop:Integer ;
    sh:path dmop:hasDataPrimitiveTypeColumn .

cb:isCategorical a sh:PropertyShape ;
    sh:hasValue true ;
    sh:path dmop:isCategorical .

cb:isFeature a sh:PropertyShape ;
    sh:hasValue true ;
    sh:path dmop:isFeature .

cb:isNormalDistributionConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isNormallyDistributed .

cb:isNormalizedConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isNormalized .

cb:isNotNormalDistributionConstraint a sh:PropertyConstraintComponent ;
    sh:maxCount 0 ;
    sh:path dmop:isNormallyDistributed .

cb:isStringConstraint a sh:PropertyShape ;
    sh:hasValue dmop:String ;
    sh:path dmop:hasDataPrimitiveTypeColumn .

cb:missingValueConstraint a sh:PropertyShape ;
    sh:maxCount 1 ;
    sh:maxInclusive 5e-02 ;
    sh:path dmop:missingvaluesPercentage .

dmop:isFeature rdfs:subPropertyOf dmop:ColumnInfoProperty .

cb:DropColumns a tb:Algorithm ;
    rdfs:label "DropColumns" ;
    tb:solves cb:DataManagement .

cb:MissingValueRemoval a tb:Algorithm ;
    rdfs:label "MissingValueRemoval" ;
    tb:solves cb:MissingValueManagement .

cb:NonNullColumnProperty sh:datatype xsd:boolean ;
    sh:hasValue false ;
    sh:path dmop:containsNulls .

cb:NumericCategoricalTabularDatasetShape a sh:NodeShape ;
    sh:property cb:hasAnyStringCategoricalColumn ;
    sh:targetClass dmop:TabularDataset .

cb:NumericColumnProperty sh:in ( dmop:Integer dmop:Float ) ;
    sh:path dmop:hasDataPrimitiveTypeColumn .

cb:NumericColumnShape a sh:NodeShape ;
    sh:property cb:NumericColumnProperty ;
    sh:targetClass dmop:Column .

cb:Partitioning a tb:Algorithm ;
    rdfs:label "Partitioning" ;
    tb:solves cb:DataManagement .

cb:SVM a tb:Algorithm ;
    rdfs:label "SVM" ;
    tb:solves cb:Classification .

cb:TestTensorDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isTestConstraint ;
    sh:targetClass dmop:TensorDataset .

cb:TrainTensorDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isTrainConstraint ;
    sh:targetClass dmop:TensorDataset .

cb:XGBoost a tb:Algorithm ;
    rdfs:label "XGBoost" ;
    tb:solves cb:Classification .

cb:component-convolutional_nn_learner-nn_type_convolutional_specification a tb:ParameterSpecification ;
    tb:hasValue "Convolutional" .

cb:component-convolutional_nn_multidimensional_learner-nn_type_convolutional_specification a tb:ParameterSpecification ;
    tb:hasValue "Convolutional" .

cb:component-csv_reader_component-format_csv_specification a tb:ParameterSpecification ;
    tb:hasValue "CSV" .

cb:component-drop_rows_with_missing_values-factor_strategy_drop_specification a tb:ParameterSpecification ;
    tb:hasValue "Drop" .

cb:component-drop_rows_with_missing_values-numeric_strategy_drop_specification a tb:ParameterSpecification ;
    tb:hasValue "Drop" .

cb:component-feedforward_nn_learner-nn_type_feedforward_specification a tb:ParameterSpecification ;
    tb:hasValue "FeedForward" .

cb:component-feedforward_nn_multidimensional_learner-nn_type_feedforward_specification a tb:ParameterSpecification ;
    tb:hasValue "FeedForward" .

cb:component-folder_reader_component-format_folder_specification a tb:ParameterSpecification ;
    tb:hasValue "Folder" .

cb:component-lstm_nn_learner-nn_type_lstm_specification a tb:ParameterSpecification ;
    tb:hasValue "LSTM" .

cb:component-lstm_nn_multidimensional_learner-nn_type_lstm_specification a tb:ParameterSpecification ;
    tb:hasValue "LSTM" .

cb:component-mean_imputation-factor_strategy_mostfrecuent_specification a tb:ParameterSpecification ;
    tb:hasValue "MostFrecuent" .

cb:component-mean_imputation-numeric_strategy_meanimputation_specification a tb:ParameterSpecification ;
    tb:hasValue "MeanImputation" .

cb:component-missing_value_management_applier a tb:ApplierComponent ;
    rdfs:label "Missing Value Management Applier" ;
    tb:hasImplementation cb:implementation-missing_value_\(applier\) ;
    tb:hasLearner cb:component-drop_rows_with_missing_values,
        cb:component-mean_imputation ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 2 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 2 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
DELETE {
    $output2 ?property ?value.
}
WHERE {
    $output1 cb:removesProperty ?property.
    $output2 ?property ?value.
}
""" ] ) .

cb:component-numpyzip_reader_component-format_numpyzip_specification a tb:ParameterSpecification ;
    tb:hasValue "NumpyZip" .

cb:component-parquet_reader_component-format_parquet_specification a tb:ParameterSpecification ;
    tb:hasValue "Parquet" .

cb:component-random_absolute_train_test_split-sampling_method_random_specification a tb:ParameterSpecification ;
    tb:hasValue "Random" .

cb:component-random_absolute_train_test_split-size_type_absolute_specification a tb:ParameterSpecification ;
    tb:hasValue "Absolute" .

cb:component-random_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification a tb:ParameterSpecification ;
    tb:hasValue "Absolute" .

cb:component-random_absolute_train_test_split_\(tensor\)-sampling_method_random_specification a tb:ParameterSpecification ;
    tb:hasValue "Random" .

cb:component-random_relative_train_test_split-sampling_method_random_specification a tb:ParameterSpecification ;
    tb:hasValue "Random" .

cb:component-random_relative_train_test_split-size_type_relative_specification a tb:ParameterSpecification ;
    tb:hasValue "Relative" .

cb:component-random_relative_train_test_split_\(tensor\)-partition_method_relative_specification a tb:ParameterSpecification ;
    tb:hasValue "Relative" .

cb:component-random_relative_train_test_split_\(tensor\)-sampling_method_random_specification a tb:ParameterSpecification ;
    tb:hasValue "Random" .

cb:component-recurrent_nn_learner-nn_type_recurrent_specification a tb:ParameterSpecification ;
    tb:hasValue "Recurrent" .

cb:component-recurrent_nn_multidimensional_learner-nn_type_recurrent_specification a tb:ParameterSpecification ;
    tb:hasValue "Recurrent" .

cb:component-top_k_absolute_train_test_split-sampling_method_first_specification a tb:ParameterSpecification ;
    tb:hasValue "First" .

cb:component-top_k_absolute_train_test_split-size_type_absolute_specification a tb:ParameterSpecification ;
    tb:hasValue "Absolute" .

cb:component-top_k_absolute_train_test_split_\(tensor\)-partition_method_absolute_specification a tb:ParameterSpecification ;
    tb:hasValue "Absolute" .

cb:component-top_k_absolute_train_test_split_\(tensor\)-sampling_method_first_specification a tb:ParameterSpecification ;
    tb:hasValue "First" .

cb:component-top_k_relative_train_test_split-sampling_method_first_specification a tb:ParameterSpecification ;
    tb:hasValue "First" .

cb:component-top_k_relative_train_test_split-size_type_relative_specification a tb:ParameterSpecification ;
    tb:hasValue "Relative" .

cb:component-top_k_relative_train_test_split_\(tensor\)-partition_method_relative_specification a tb:ParameterSpecification ;
    tb:hasValue "Relative" .

cb:component-top_k_relative_train_test_split_\(tensor\)-sampling_method_first_specification a tb:ParameterSpecification ;
    tb:hasValue "First" .

cb:component-xgboost_dart_learner-booster_dart_specification a tb:ParameterSpecification ;
    tb:hasValue "dart" .

cb:component-xgboost_linear_learner-booster_linear_specification a tb:ParameterSpecification ;
    tb:hasValue "linear" .

cb:component-xgboost_tree_learner-booster_tree_specification a tb:ParameterSpecification ;
    tb:hasValue "tree" .

cb:component-zip_reader_component-format_zip_specification a tb:ParameterSpecification ;
    tb:hasValue "ZIP" .

cb:hasFloatColumn a sh:PropertyShape ;
    sh:path dmop:hasColumn ;
    sh:qualifiedMaxCount 0 ;
    sh:qualifiedMinCount 1 ;
    sh:qualifiedValueShape cb:floatTypeConstraint .

cb:hasIntegerColumn a sh:PropertyShape ;
    sh:path dmop:hasColumn ;
    sh:qualifiedMaxCount 0 ;
    sh:qualifiedMinCount 1 ;
    sh:qualifiedValueShape cb:integerTypeConstraint .

cb:implementation-data_partitioning-class_columns a tb:Parameter ;
    rdfs:label "Class columns" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 5 .

cb:implementation-data_partitioning-sampling_method-First a tb:FactorLevel ;
    tb:hasValue "First" .

cb:implementation-data_partitioning-sampling_method-Random a tb:FactorLevel ;
    tb:hasValue "Random" .

cb:implementation-data_partitioning-size_type-Absolute a tb:FactorLevel ;
    tb:hasValue "Absolute" .

cb:implementation-data_partitioning-size_type-Relative a tb:FactorLevel ;
    tb:hasValue "Relative" .

cb:implementation-data_reader-format-Folder a tb:FactorLevel ;
    tb:hasValue "Folder" .

cb:implementation-data_reader-format-NumpyZip a tb:FactorLevel ;
    tb:hasValue "NumpyZip" .

cb:implementation-data_reader-format-Parquet a tb:FactorLevel ;
    tb:hasValue "Parquet" .

cb:implementation-data_reader-format-ZIP a tb:FactorLevel ;
    tb:hasValue "ZIP" .

cb:implementation-missing_value-categorical_columns a tb:Parameter ;
    rdfs:label "Categorical columns" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$CATEGORICAL_COLUMNS$$" ;
    tb:has_position 4 .

cb:implementation-missing_value-factor_strategy a tb:Parameter ;
    rdfs:label "Factor strategy" ;
    tb:hasLevel cb:implementation-missing_value-factor_strategy-Drop,
        cb:implementation-missing_value-factor_strategy-MostFrequent ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 6 ;
    tb:specifiedBy cb:component-drop_rows_with_missing_values-factor_strategy_drop_specification,
        cb:component-mean_imputation-factor_strategy_mostfrecuent_specification .

cb:implementation-missing_value-factor_strategy-Drop a tb:FactorLevel ;
    tb:hasValue "Drop" .

cb:implementation-missing_value-factor_strategy-MostFrequent a tb:FactorLevel ;
    tb:hasValue "MostFrequent" .

cb:implementation-missing_value-numeric_columns a tb:Parameter ;
    rdfs:label "Numeric columns" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$NUMERIC_COLUMNS$$" ;
    tb:has_position 3 .

cb:implementation-missing_value-numeric_strategy a tb:Parameter ;
    rdfs:label "Numeric strategy" ;
    tb:hasLevel cb:implementation-missing_value-numeric_strategy-Drop,
        cb:implementation-missing_value-numeric_strategy-MeanImputation ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 5 ;
    tb:specifiedBy cb:component-drop_rows_with_missing_values-numeric_strategy_drop_specification,
        cb:component-mean_imputation-numeric_strategy_meanimputation_specification .

cb:implementation-missing_value-numeric_strategy-Drop a tb:FactorLevel ;
    tb:hasValue "Drop" .

cb:implementation-missing_value-numeric_strategy-MeanImputation a tb:FactorLevel ;
    tb:hasValue "MeanImputation" .

cb:implementation-missing_value_\(applier\) a tb:ApplierImplementation ;
    rdfs:label "Missing Value (Applier)" ;
    tb:engine "Simple" ;
    tb:implements cb:MissingValueRemoval ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:MissingValueModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-nn_multidimensional_predictor a tb:ApplierImplementation ;
    rdfs:label "NN Multidimensional Predictor" ;
    tb:engine "Simple" ;
    tb:hasLearner cb:implementation-nn_multidimensional_learner ;
    tb:hasParameter cb:implementation-nn_multidimensional_predictor-add_probabilities,
        cb:implementation-nn_multidimensional_predictor-change_prediction,
        cb:implementation-nn_multidimensional_predictor-class_probability_suffix,
        cb:implementation-nn_multidimensional_predictor-prediction_array_name ;
    tb:implements cb:NN ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NNModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTensorDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-nn_predictor a tb:ApplierImplementation ;
    rdfs:label "NN Predictor" ;
    tb:engine "Simple" ;
    tb:hasLearner cb:implementation-nn_learner ;
    tb:hasParameter cb:implementation-nn_predictor-add_probabilities,
        cb:implementation-nn_predictor-change_prediction,
        cb:implementation-nn_predictor-class_probability_suffix,
        cb:implementation-nn_predictor-prediction_column_name ;
    tb:implements cb:NN ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NormalizedTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NNModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-numerical_projection-projected_columns a tb:Parameter ;
    rdfs:label "Projected columns" ;
    tb:has_condition "" ;
    tb:has_datatype rdf:List ;
    tb:has_defaultvalue "$$NUMERIC_COLUMNS$$" ;
    tb:has_position 0 .

cb:implementation-numerical_projection-target_column a tb:Parameter ;
    rdfs:label "Target Column" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$LABEL_CATEGORICAL$$" ;
    tb:has_position 1 .

cb:implementation-svm_learner a tb:LearnerImplementation ;
    rdfs:label "SVM Learner" ;
    tb:engine "Simple" ;
    tb:hasApplier cb:implementation-svm_predictor ;
    tb:hasParameter cb:implementation-svm_learner-bias,
        cb:implementation-svm_learner-gamma,
        cb:implementation-svm_learner-kernel_type,
        cb:implementation-svm_learner-overlapping_penalty,
        cb:implementation-svm_learner-power,
        cb:implementation-svm_learner-svm_class_column ;
    tb:implements cb:SVM ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericCategoricalTabularDatasetShape ;
                    tb:hasImportanceLevel 1 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NormalizedTabularDatasetShape ;
                    tb:hasImportanceLevel 1 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:LabeledTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:SVMModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-svm_learner-bias a tb:Parameter ;
    rdfs:label "Bias" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 2 .

cb:implementation-svm_learner-gamma a tb:Parameter ;
    rdfs:label "Gamma" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 4 .

cb:implementation-svm_learner-kernel_type a tb:Parameter ;
    rdfs:label "Kernel type" ;
    tb:hasLevel cb:implementation-svm_learner-kernel_type-Polynomial,
        cb:implementation-svm_learner-kernel_type-RBF,
        cb:implementation-svm_learner-kernel_type-Sigmoid ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 5 .

cb:implementation-svm_learner-kernel_type-Polynomial a tb:FactorLevel ;
    tb:hasValue "Polynomial" .

cb:implementation-svm_learner-kernel_type-RBF a tb:FactorLevel ;
    tb:hasValue "RBF" .

cb:implementation-svm_learner-kernel_type-Sigmoid a tb:FactorLevel ;
    tb:hasValue "Sigmoid" .

cb:implementation-svm_learner-overlapping_penalty a tb:Parameter ;
    rdfs:label "Overlapping Penalty" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 1 .

cb:implementation-svm_learner-power a tb:Parameter ;
    rdfs:label "Power" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 3 .

cb:implementation-svm_learner-svm_class_column a tb:Parameter ;
    rdfs:label "SVM Class column" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$LABEL_CATEGORICAL$$" ;
    tb:has_position 0 .

cb:implementation-svm_predictor a tb:ApplierImplementation ;
    rdfs:label "SVM Predictor" ;
    tb:engine "Simple" ;
    tb:hasLearner cb:implementation-svm_learner ;
    tb:implements cb:SVM ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericCategoricalTabularDatasetShape ;
                    tb:hasImportanceLevel 1 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NormalizedTabularDatasetShape ;
                    tb:hasImportanceLevel 1 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:SVMModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-xgboost_learner-alpha a tb:Parameter ;
    rdfs:label "Alpha" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 10 .

cb:implementation-xgboost_learner-base_score a tb:Parameter ;
    rdfs:label "Base score" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 7 .

cb:implementation-xgboost_learner-booster a tb:Parameter ;
    rdfs:label "Booster" ;
    tb:hasLevel cb:implementation-xgboost_learner-booster-dart,
        cb:implementation-xgboost_learner-booster-linear,
        cb:implementation-xgboost_learner-booster-tree ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 2 ;
    tb:specifiedBy cb:component-xgboost_dart_learner-booster_dart_specification,
        cb:component-xgboost_linear_learner-booster_linear_specification,
        cb:component-xgboost_tree_learner-booster_tree_specification .

cb:implementation-xgboost_learner-booster-dart a tb:FactorLevel ;
    tb:hasValue "dart" .

cb:implementation-xgboost_learner-booster-linear a tb:FactorLevel ;
    tb:hasValue "linear" .

cb:implementation-xgboost_learner-booster-tree a tb:FactorLevel ;
    tb:hasValue "tree" .

cb:implementation-xgboost_learner-boosting_rounds a tb:Parameter ;
    rdfs:label "Boosting rounds" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 4 .

cb:implementation-xgboost_learner-col_sample_by_level a tb:Parameter ;
    rdfs:label "Col sample by level" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 21 .

cb:implementation-xgboost_learner-col_sample_by_node a tb:Parameter ;
    rdfs:label "Col sample by node" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 22 .

cb:implementation-xgboost_learner-col_sample_by_tree a tb:Parameter ;
    rdfs:label "Col sample by tree" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 20 .

cb:implementation-xgboost_learner-eta a tb:Parameter ;
    rdfs:label "Eta" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 14 .

cb:implementation-xgboost_learner-feature_selector a tb:Parameter ;
    rdfs:label "Feature selector" ;
    tb:hasLevel cb:implementation-xgboost_learner-feature_selector-cyclic,
        cb:implementation-xgboost_learner-feature_selector-greedy,
        cb:implementation-xgboost_learner-feature_selector-random,
        cb:implementation-xgboost_learner-feature_selector-shuffle,
        cb:implementation-xgboost_learner-feature_selector-thrifty ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 12 .

cb:implementation-xgboost_learner-feature_selector-cyclic a tb:FactorLevel ;
    tb:hasValue "cyclic" .

cb:implementation-xgboost_learner-feature_selector-greedy a tb:FactorLevel ;
    tb:hasValue "greedy" .

cb:implementation-xgboost_learner-feature_selector-random a tb:FactorLevel ;
    tb:hasValue "random" .

cb:implementation-xgboost_learner-feature_selector-shuffle a tb:FactorLevel ;
    tb:hasValue "shuffle" .

cb:implementation-xgboost_learner-feature_selector-thrifty a tb:FactorLevel ;
    tb:hasValue "thrifty" .

cb:implementation-xgboost_learner-gamma a tb:Parameter ;
    rdfs:label "Gamma" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 15 .

cb:implementation-xgboost_learner-grow_policy a tb:Parameter ;
    rdfs:label "Grow policy" ;
    tb:hasLevel cb:implementation-xgboost_learner-grow_policy-depthwise,
        cb:implementation-xgboost_learner-grow_policy-lossguide ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 26 .

cb:implementation-xgboost_learner-grow_policy-depthwise a tb:FactorLevel ;
    tb:hasValue "depthwise" .

cb:implementation-xgboost_learner-grow_policy-lossguide a tb:FactorLevel ;
    tb:hasValue "lossguide" .

cb:implementation-xgboost_learner-lambda a tb:Parameter ;
    rdfs:label "Lambda" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 9 .

cb:implementation-xgboost_learner-max_bin a tb:Parameter ;
    rdfs:label "Max Bin" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 28 .

cb:implementation-xgboost_learner-max_delta_step a tb:Parameter ;
    rdfs:label "Max delta step" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 18 .

cb:implementation-xgboost_learner-max_depth a tb:Parameter ;
    rdfs:label "Max Depth" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 16 .

cb:implementation-xgboost_learner-max_leaves a tb:Parameter ;
    rdfs:label "Max Leaves" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 27 .

cb:implementation-xgboost_learner-min_child_weight a tb:Parameter ;
    rdfs:label "Min child weight" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 17 .

cb:implementation-xgboost_learner-normalize_type a tb:Parameter ;
    rdfs:label "Normalize type" ;
    tb:hasLevel cb:implementation-xgboost_learner-normalize_type-forest,
        cb:implementation-xgboost_learner-normalize_type-tree ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 30 .

cb:implementation-xgboost_learner-normalize_type-forest a tb:FactorLevel ;
    tb:hasValue "forest" .

cb:implementation-xgboost_learner-normalize_type-tree a tb:FactorLevel ;
    tb:hasValue "tree" .

cb:implementation-xgboost_learner-number_of_threads a tb:Parameter ;
    rdfs:label "Number of threads" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 5 .

cb:implementation-xgboost_learner-objective a tb:Parameter ;
    rdfs:label "Objective" ;
    tb:hasLevel <https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-binary:logistic>,
        <https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-multi:softprob> ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 8 .

<https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-binary:logistic> a tb:FactorLevel ;
    tb:hasValue "binary:logistic" .

<https://extremexp.eu/ontology/cbox#implementation-xgboost_learner-objective-multi:softprob> a tb:FactorLevel ;
    tb:hasValue "multi:softprob" .

cb:implementation-xgboost_learner-one_drop a tb:Parameter ;
    rdfs:label "One drop" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:boolean ;
    tb:has_position 32 .

cb:implementation-xgboost_learner-random_seed a tb:Parameter ;
    rdfs:label "Random seed" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 6 .

cb:implementation-xgboost_learner-rate_drop a tb:Parameter ;
    rdfs:label "Rate drop" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 31 .

cb:implementation-xgboost_learner-sample_type a tb:Parameter ;
    rdfs:label "Sample type" ;
    tb:hasLevel cb:implementation-xgboost_learner-sample_type-uniform,
        cb:implementation-xgboost_learner-sample_type-weighted ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 29 .

cb:implementation-xgboost_learner-sample_type-uniform a tb:FactorLevel ;
    tb:hasValue "uniform" .

cb:implementation-xgboost_learner-sample_type-weighted a tb:FactorLevel ;
    tb:hasValue "weighted" .

cb:implementation-xgboost_learner-sample_weight a tb:Parameter ;
    rdfs:label "Sample weight" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 3 .

cb:implementation-xgboost_learner-scale_pos_weight a tb:Parameter ;
    rdfs:label "Scale Pos Weight" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 25 .

cb:implementation-xgboost_learner-sketch_eps a tb:Parameter ;
    rdfs:label "Sketch Eps" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 24 .

cb:implementation-xgboost_learner-skip_drop a tb:Parameter ;
    rdfs:label "Skip drop" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 33 .

cb:implementation-xgboost_learner-subsample a tb:Parameter ;
    rdfs:label "Subsample" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_position 19 .

cb:implementation-xgboost_learner-top_k a tb:Parameter ;
    rdfs:label "Top K" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_position 13 .

cb:implementation-xgboost_learner-tree_method a tb:Parameter ;
    rdfs:label "Tree method" ;
    tb:hasLevel cb:implementation-xgboost_learner-tree_method-approx,
        cb:implementation-xgboost_learner-tree_method-auto,
        cb:implementation-xgboost_learner-tree_method-exact,
        cb:implementation-xgboost_learner-tree_method-hist ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 23 .

cb:implementation-xgboost_learner-tree_method-approx a tb:FactorLevel ;
    tb:hasValue "approx" .

cb:implementation-xgboost_learner-tree_method-auto a tb:FactorLevel ;
    tb:hasValue "auto" .

cb:implementation-xgboost_learner-tree_method-exact a tb:FactorLevel ;
    tb:hasValue "exact" .

cb:implementation-xgboost_learner-tree_method-hist a tb:FactorLevel ;
    tb:hasValue "hist" .

cb:isTestConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isTestDataset .

cb:isTrainConstraint a sh:PropertyConstraintComponent ;
    sh:datatype xsd:boolean ;
    sh:hasValue true ;
    sh:path dmop:isTrainDataset .

cb:AnomalyDetection a tb:Task ;
    tb:subtaskOf cb:Description .

cb:Clustering a tb:Task ;
    tb:subtaskOf cb:Description .

cb:DataCleaning a tb:Task .

cb:DataManagement a tb:Task .

cb:LabeledTabularDatasetShape a sh:NodeShape ;
    sh:property [ sh:minCount 1 ;
            sh:path dmop:hasColumn ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue true ;
                    sh:path dmop:isLabel ] ] ;
    sh:targetClass dmop:TabularDataset .

cb:MissingValueModel rdfs:subClassOf cb:Model .

cb:Normalization a tb:Task ;
    tb:subtaskOf cb:DataCleaning .

cb:ProjectionModel rdfs:subClassOf cb:Model .

cb:SVMModel rdfs:subClassOf cb:Model .

cb:XGBoostModel rdfs:subClassOf cb:Model .

cb:component-xgboost_predictor a tb:ApplierComponent ;
    rdfs:label "XGBoost Predictor" ;
    tb:hasImplementation cb:implementation-xgboost_predictor ;
    tb:hasLearner cb:component-xgboost_dart_learner,
        cb:component-xgboost_linear_learner,
        cb:component-xgboost_tree_learner ;
    tb:hasTransformation ( [ a tb:CopyTransformation ;
                tb:copy_input 2 ;
                tb:copy_output 1 ;
                tb:transformation_language "COPY" ;
                tb:transformation_query "COPY input 2 TO output 1" ] [ a tb:Transformation ;
                tb:transformation_language "SPARQL" ;
                tb:transformation_query """
INSERT {
    $output1 dmop:hasColumn _:labelColumn .
    _:labelColumn a dmop:Column ;
        dmop:isLabel true;
      dmop:hasName $parameter1.
}
WHERE {
    $input1 cb:setsClassColumnName ?classColumnName .
}
            """ ] ) .

cb:implementation-data_partitioning-sampling_method a tb:Parameter ;
    rdfs:label "Sampling Method" ;
    tb:hasLevel cb:implementation-data_partitioning-sampling_method-First,
        cb:implementation-data_partitioning-sampling_method-Random ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 1 ;
    tb:specifiedBy cb:component-random_absolute_train_test_split-sampling_method_random_specification,
        cb:component-random_relative_train_test_split-sampling_method_random_specification,
        cb:component-top_k_absolute_train_test_split-sampling_method_first_specification,
        cb:component-top_k_relative_train_test_split-sampling_method_first_specification .

cb:implementation-data_reader-format a tb:Parameter ;
    rdfs:label "Format" ;
    tb:hasLevel cb:implementation-data_reader-format-CSV,
        cb:implementation-data_reader-format-Folder,
        cb:implementation-data_reader-format-NumpyZip,
        cb:implementation-data_reader-format-Parquet,
        cb:implementation-data_reader-format-ZIP ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$DATA_RAW_FORMAT$$" ;
    tb:has_position 1 ;
    tb:specifiedBy cb:component-csv_reader_component-format_csv_specification,
        cb:component-folder_reader_component-format_folder_specification,
        cb:component-numpyzip_reader_component-format_numpyzip_specification,
        cb:component-parquet_reader_component-format_parquet_specification,
        cb:component-zip_reader_component-format_zip_specification .

cb:implementation-data_reader-format-CSV a tb:FactorLevel ;
    tb:hasValue "CSV" .

cb:implementation-data_writer a tb:Implementation ;
    rdfs:label "Data Writer" ;
    tb:engine "Simple" ;
    tb:hasParameter cb:implementation-data_writer-output_path ;
    tb:implements cb:DataStoring ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-data_writer-output_path a tb:Parameter ;
    rdfs:label "Output path" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "./output.csv" ;
    tb:has_position 0 .

cb:implementation-missing_value a tb:LearnerImplementation ;
    rdfs:label "Missing Value" ;
    tb:engine "Simple" ;
    tb:hasParameter cb:implementation-missing_value-categorical_columns,
        cb:implementation-missing_value-factor_strategy,
        cb:implementation-missing_value-float,
        cb:implementation-missing_value-integer,
        cb:implementation-missing_value-numeric_columns,
        cb:implementation-missing_value-numeric_strategy,
        cb:implementation-missing_value-string ;
    tb:implements cb:MissingValueRemoval ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:MissingValueModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ] .

cb:implementation-numeric_projection_predictor a tb:ApplierImplementation ;
    rdfs:label "Numeric projection Predictor" ;
    tb:engine "Simple" ;
    tb:hasLearner cb:implementation-numerical_projection ;
    tb:implements cb:DropColumns ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:ProjectionModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericOnlyTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-numerical_projection a tb:LearnerImplementation ;
    rdfs:label "Numerical Projection" ;
    tb:engine "Simple" ;
    tb:hasApplier cb:implementation-numeric_projection_predictor ;
    tb:hasParameter cb:implementation-numerical_projection-projected_columns,
        cb:implementation-numerical_projection-target_column ;
    tb:implements cb:DropColumns ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:ProjectionModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericOnlyTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-tensor_data_partitioning-count_\(absolute_size\) a tb:Parameter ;
    rdfs:label "Count (Absolute size)" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_defaultvalue 100 ;
    tb:has_position 3 .

cb:implementation-tensor_data_partitioning-fraction_\(relative_size\) a tb:Parameter ;
    rdfs:label "Fraction (Relative size)" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_defaultvalue 8e-01 ;
    tb:has_position 2 .

cb:implementation-tensor_data_partitioning-random_seed a tb:Parameter ;
    rdfs:label "Random seed" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 4 .

cb:implementation-xgboost_predictor a tb:ApplierImplementation ;
    rdfs:label "XGBoost Predictor" ;
    tb:engine "Simple" ;
    tb:hasLearner cb:implementation-xgboost_learner ;
    tb:implements cb:XGBoost ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:XGBoostModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericOnlyTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

dmop:hasDataPrimitiveTypeColumn rdfs:subPropertyOf dmop:ColumnInfoProperty .

dmop:isLabel rdfs:subPropertyOf dmop:ColumnInfoProperty .

cb:Description a tb:Task .

cb:NN a tb:Algorithm ;
    rdfs:label "NN" ;
    tb:solves cb:Classification .

cb:NormalizedTabularDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isNormalizedConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:NumericOnlyTabularDatasetShape a sh:NodeShape ;
    sh:property [ sh:node [ sh:or ( cb:NumericColumnShape [ sh:hasValue true ;
                                sh:path dmop:isLabel ] ) ] ;
            sh:path dmop:hasColumn ] ;
    sh:targetClass dmop:TabularDataset ;
    sh:targetObjectsOf dmop:hasColumn .

cb:TrainTabularDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isTrainConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:component-nn_multidimensional_predictor a tb:ApplierComponent ;
    rdfs:label "NN Multidimensional Predictor" ;
    tb:hasImplementation cb:implementation-nn_multidimensional_predictor ;
    tb:hasLearner cb:component-convolutional_nn_multidimensional_learner,
        cb:component-feedforward_nn_multidimensional_learner,
        cb:component-lstm_nn_multidimensional_learner,
        cb:component-recurrent_nn_multidimensional_learner ;
    tb:hasTransformation [ rdf:rest () ] .

cb:component-nn_predictor a tb:ApplierComponent ;
    rdfs:label "NN Predictor" ;
    tb:hasImplementation cb:implementation-nn_predictor ;
    tb:hasLearner cb:component-convolutional_nn_learner,
        cb:component-feedforward_nn_learner,
        cb:component-lstm_nn_learner,
        cb:component-recurrent_nn_learner ;
    tb:hasTransformation [ rdf:rest () ] .

cb:implementation-data_partitioning-random_seed a tb:Parameter ;
    rdfs:label "Random seed" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 4 .

cb:implementation-data_partitioning-size_type a tb:Parameter ;
    rdfs:label "Size type" ;
    tb:hasLevel cb:implementation-data_partitioning-size_type-Absolute,
        cb:implementation-data_partitioning-size_type-Relative ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_position 0 ;
    tb:specifiedBy cb:component-random_absolute_train_test_split-size_type_absolute_specification,
        cb:component-random_relative_train_test_split-size_type_relative_specification,
        cb:component-top_k_absolute_train_test_split-size_type_absolute_specification,
        cb:component-top_k_relative_train_test_split-size_type_relative_specification .

cb:implementation-tensor_data_partitioning a tb:Implementation ;
    rdfs:label "Tensor Data Partitioning" ;
    tb:engine "Simple" ;
    tb:hasParameter cb:implementation-tensor_data_partitioning-class_columns,
        cb:implementation-tensor_data_partitioning-count_\(absolute_size\),
        cb:implementation-tensor_data_partitioning-fraction_\(relative_size\),
        cb:implementation-tensor_data_partitioning-partition_method,
        cb:implementation-tensor_data_partitioning-random_seed,
        cb:implementation-tensor_data_partitioning-sampling_method ;
    tb:implements cb:Partitioning ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TensorDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTensorDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTensorDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:MissingValueManagement a tb:Task ;
    tb:subtaskOf cb:DataCleaning .

cb:NNModel rdfs:subClassOf cb:Model .

cb:TensorDataset a sh:NodeShape,
        tb:DataTag ;
    sh:property [ sh:hasValue dmop:TensorDataset ;
            sh:path rdf:type ] ;
    sh:targetClass dmop:TensorDataset ;
    tb:has_weight 1 .

cb:TestTabularDatasetShape a sh:NodeShape,
        tb:DataTag ;
    sh:property cb:isTestConstraint ;
    sh:targetClass dmop:TabularDataset .

cb:implementation-data_partitioning-count_\(absolute_size\) a tb:Parameter ;
    rdfs:label "Count (Absolute size)" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:int ;
    tb:has_defaultvalue 10 ;
    tb:has_position 3 .

cb:implementation-data_partitioning-fraction_\(relative_size\) a tb:Parameter ;
    rdfs:label "Fraction (Relative size)" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:double ;
    tb:has_defaultvalue 2.5e-01 ;
    tb:has_position 2 .

cb:implementation-nn_learner a tb:LearnerImplementation ;
    rdfs:label "NN Learner" ;
    tb:engine "Simple" ;
    tb:hasApplier cb:implementation-nn_predictor ;
    tb:hasParameter cb:implementation-nn_learner-class_column,
        cb:implementation-nn_learner-nn_type ;
    tb:implements cb:NN ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NormalizedTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NonNullTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:LabeledTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NNModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-nn_learner-class_column a tb:Parameter ;
    rdfs:label "Class column" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$LABEL$$" ;
    tb:has_position 0 .

cb:implementation-nn_multidimensional_learner a tb:LearnerImplementation ;
    rdfs:label "NN Multidimensional Learner" ;
    tb:engine "Simple" ;
    tb:hasApplier cb:implementation-nn_multidimensional_predictor ;
    tb:hasParameter cb:implementation-nn_multidimensional_learner-label_array,
        cb:implementation-nn_multidimensional_learner-nn_type ;
    tb:implements cb:NN ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:LabeledTensorDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTensorDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NNModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-nn_multidimensional_learner-label_array a tb:Parameter ;
    rdfs:label "Label array" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$LABEL$$" ;
    tb:has_position 0 .

cb:implementation-xgboost_learner a tb:LearnerImplementation ;
    rdfs:label "XGBoost Learner" ;
    tb:engine "Simple" ;
    tb:hasApplier cb:implementation-xgboost_predictor ;
    tb:hasParameter cb:implementation-xgboost_learner-alpha,
        cb:implementation-xgboost_learner-base_score,
        cb:implementation-xgboost_learner-booster,
        cb:implementation-xgboost_learner-boosting_rounds,
        cb:implementation-xgboost_learner-col_sample_by_level,
        cb:implementation-xgboost_learner-col_sample_by_node,
        cb:implementation-xgboost_learner-col_sample_by_tree,
        cb:implementation-xgboost_learner-eta,
        cb:implementation-xgboost_learner-feature_selector,
        cb:implementation-xgboost_learner-gamma,
        cb:implementation-xgboost_learner-grow_policy,
        cb:implementation-xgboost_learner-lambda,
        cb:implementation-xgboost_learner-max_bin,
        cb:implementation-xgboost_learner-max_delta_step,
        cb:implementation-xgboost_learner-max_depth,
        cb:implementation-xgboost_learner-max_leaves,
        cb:implementation-xgboost_learner-min_child_weight,
        cb:implementation-xgboost_learner-normalize_type,
        cb:implementation-xgboost_learner-number_of_threads,
        cb:implementation-xgboost_learner-numeric_columns,
        cb:implementation-xgboost_learner-objective,
        cb:implementation-xgboost_learner-one_drop,
        cb:implementation-xgboost_learner-random_seed,
        cb:implementation-xgboost_learner-rate_drop,
        cb:implementation-xgboost_learner-sample_type,
        cb:implementation-xgboost_learner-sample_weight,
        cb:implementation-xgboost_learner-scale_pos_weight,
        cb:implementation-xgboost_learner-sketch_eps,
        cb:implementation-xgboost_learner-skip_drop,
        cb:implementation-xgboost_learner-subsample,
        cb:implementation-xgboost_learner-target_column,
        cb:implementation-xgboost_learner-top_k,
        cb:implementation-xgboost_learner-tree_method,
        cb:implementation-xgboost_learner-updater ;
    tb:implements cb:XGBoost ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:LabeledTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ],
                [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:NumericOnlyTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:XGBoostModel ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:implementation-xgboost_learner-target_column a tb:Parameter ;
    rdfs:label "Target Column" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$LABEL_CATEGORICAL$$" ;
    tb:has_position 0 .

cb:NonNullTabularDatasetShape a sh:NodeShape ;
    sh:property [ sh:node cb:NonNullColumnShape ;
            sh:path dmop:hasColumn ] ;
    sh:targetClass dmop:TabularDataset .

cb:Visualization rdfs:subClassOf tb:Data .

cb:implementation-data_partitioning a tb:Implementation ;
    rdfs:label "Data Partitioning" ;
    tb:engine "Simple" ;
    tb:hasParameter cb:implementation-data_partitioning-class_columns,
        cb:implementation-data_partitioning-count_\(absolute_size\),
        cb:implementation-data_partitioning-fraction_\(relative_size\),
        cb:implementation-data_partitioning-random_seed,
        cb:implementation-data_partitioning-sampling_method,
        cb:implementation-data_partitioning-size_type ;
    tb:implements cb:Partitioning ;
    tb:specifiesInput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TrainTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ],
        [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TestTabularDatasetShape ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 1 ] .

cb:implementation-data_reader a tb:Implementation ;
    rdfs:label "Data Reader" ;
    tb:engine "Simple" ;
    tb:hasParameter cb:implementation-data_reader-format,
        cb:implementation-data_reader-reader_file ;
    tb:implements cb:DataLoading ;
    tb:specifiesOutput [ a tb:DataSpec ;
            tb:hasSpecTag [ a tb:DataSpecTag ;
                    tb:hasDatatag cb:TabularDataset ;
                    tb:hasImportanceLevel 0 ] ;
            tb:has_position 0 ] .

cb:DataVisualization a tb:Task ;
    tb:subtaskOf cb:Description .

cb:Model rdfs:subClassOf tb:Data .

cb:implementation-data_reader-reader_file a tb:Parameter ;
    rdfs:label "Reader File" ;
    tb:has_condition "" ;
    tb:has_datatype xsd:string ;
    tb:has_defaultvalue "$$PATH$$" ;
    tb:has_position 0 .

cb:TabularDataset a sh:NodeShape,
        tb:DataTag ;
    sh:property [ sh:hasValue dmop:TabularDataset ;
            sh:path rdf:type ] ;
    sh:targetClass dmop:TabularDataset ;
    tb:has_weight 1 .

cb:Classification a tb:Task ;
    tb:subtaskOf cb:Description .

